{"dependencies":[{"name":"/Users/websi96/WU/nnfp/node_modules/brain.js/package.json","includedInParent":true,"mtime":1528768154807},{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790947609},{"name":"stream","loc":{"line":9,"column":22},"parent":"/Users/websi96/WU/nnfp/node_modules/brain.js/dist/train-stream.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/stream-browserify/index.js"},{"name":"./lookup","loc":{"line":11,"column":22},"parent":"/Users/websi96/WU/nnfp/node_modules/brain.js/dist/train-stream.js","resolved":"/Users/websi96/WU/nnfp/node_modules/brain.js/dist/lookup.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('stream');\n\nvar _lookup = require('./lookup');\n\nvar _lookup2 = _interopRequireDefault(_lookup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * @param opts\n * @returns {TrainStream}\n * @constructor\n */\nvar TrainStream = function (_Writable) {\n  _inherits(TrainStream, _Writable);\n\n  function TrainStream(opts) {\n    var _ret;\n\n    _classCallCheck(this, TrainStream);\n\n    var _this = _possibleConstructorReturn(this, (TrainStream.__proto__ || Object.getPrototypeOf(TrainStream)).call(this, {\n      objectMode: true\n    }));\n\n    opts = opts || {};\n\n    // require the neuralNetwork\n    if (!opts.neuralNetwork) {\n      throw new Error('no neural network specified');\n    }\n\n    _this.neuralNetwork = opts.neuralNetwork;\n    _this.dataFormatDetermined = false;\n\n    _this.inputKeys = [];\n    _this.outputKeys = []; // keeps track of keys seen\n    _this.i = 0; // keep track of the for loop i variable that we got rid of\n    _this.iterations = opts.iterations || 20000;\n    _this.errorThresh = opts.errorThresh || 0.005;\n    _this.log = opts.log ? typeof opts.log === 'function' ? opts.log : console.log : false;\n    _this.logPeriod = opts.logPeriod || 10;\n    _this.callback = opts.callback;\n    _this.callbackPeriod = opts.callbackPeriod || 10;\n    _this.floodCallback = opts.floodCallback;\n    _this.doneTrainingCallback = opts.doneTrainingCallback;\n\n    _this.size = 0;\n    _this.count = 0;\n\n    _this.sum = 0;\n\n    _this.on('finish', _this.finishStreamIteration.bind(_this));\n\n    return _ret = _this, _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * _write expects data to be in the form of a datum. ie. {input: {a: 1 b: 0}, output: {z: 0}}\n   * @param chunk\n   * @param enc\n   * @param next\n   * @returns {*}\n   * @private\n   */\n\n\n  _createClass(TrainStream, [{\n    key: '_write',\n    value: function _write(chunk, enc, next) {\n      if (!chunk) {\n        // check for the end of one iteration of the stream\n        this.emit('finish');\n        return next();\n      }\n\n      if (!this.dataFormatDetermined) {\n        this.size++;\n        this.inputKeys = uniques(this.inputKeys.slice(0).concat(Object.keys(chunk.input)));\n        this.outputKeys = uniques(this.outputKeys.slice(0).concat(Object.keys(chunk.output)));\n        this.firstDatum = this.firstDatum || chunk;\n        return next();\n      }\n\n      this.count++;\n\n      var data = this.neuralNetwork.formatData(chunk);\n      this.trainDatum(data[0]);\n\n      // tell the Readable Stream that we are ready for more data\n      next();\n    }\n\n    /**\n     *\n     * @param datum\n     */\n\n  }, {\n    key: 'trainDatum',\n    value: function trainDatum(datum) {\n      var err = this.neuralNetwork.trainPattern(datum.input, datum.output);\n      this.sum += err;\n    }\n\n    /**\n     *\n     * @returns {*}\n     */\n\n  }, {\n    key: 'finishStreamIteration',\n    value: function finishStreamIteration() {\n      if (this.dataFormatDetermined && this.size !== this.count) {\n        this.log('This iteration\\'s data length was different from the first.');\n      }\n\n      if (!this.dataFormatDetermined) {\n        // create the lookup\n        this.neuralNetwork.inputLookup = _lookup2.default.lookupFromArray(this.inputKeys);\n        if (!Array.isArray(this.firstDatum.output)) {\n          this.neuralNetwork.outputLookup = _lookup2.default.lookupFromArray(this.outputKeys);\n        }\n\n        var data = this.neuralNetwork.formatData(this.firstDatum);\n        var sizes = [];\n        var inputSize = data[0].input.length;\n        var outputSize = data[0].output.length;\n        var hiddenSizes = this.hiddenSizes;\n        if (!hiddenSizes) {\n          sizes.push(Math.max(3, Math.floor(inputSize / 2)));\n        } else {\n          hiddenSizes.forEach(function (size) {\n            sizes.push(size);\n          });\n        }\n\n        sizes.unshift(inputSize);\n        sizes.push(outputSize);\n\n        this.dataFormatDetermined = true;\n        this.neuralNetwork.initialize(sizes);\n\n        if (typeof this.floodCallback === 'function') {\n          this.floodCallback();\n        }\n        return;\n      }\n\n      var error = this.sum / this.size;\n\n      if (this.log && this.i % this.logPeriod == 0) {\n        this.log('iterations:', this.i, 'training error:', error);\n      }\n      if (this.callback && this.i % this.callbackPeriod == 0) {\n        this.callback({\n          error: error,\n          iterations: this.i\n        });\n      }\n\n      this.sum = 0;\n      this.count = 0;\n      // update the iterations\n      this.i++;\n\n      // do a check here to see if we need the stream again\n      if (this.i < this.iterations && error > this.errorThresh) {\n        if (typeof this.floodCallback === 'function') {\n          return this.floodCallback();\n        }\n      } else {\n        // done training\n        if (typeof this.doneTrainingCallback === 'function') {\n          return this.doneTrainingCallback({\n            error: error,\n            iterations: this.i\n          });\n        }\n      }\n    }\n  }]);\n\n  return TrainStream;\n}(_stream.Writable);\n\n/**\n *\n * https://gist.github.com/telekosmos/3b62a31a5c43f40849bb\n * @param arr\n * @returns {Array}\n */\n\n\nexports.default = TrainStream;\nfunction uniques(arr) {\n  // Sets cannot contain duplicate elements, which is what we want\n  return [].concat(_toConsumableArray(new Set(arr)));\n}\n//# sourceMappingURL=train-stream.js.map","map":{"mappings":[{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/brain.js/dist/train-stream.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}}],"sources":{"node_modules/brain.js/dist/train-stream.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('stream');\n\nvar _lookup = require('./lookup');\n\nvar _lookup2 = _interopRequireDefault(_lookup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * @param opts\n * @returns {TrainStream}\n * @constructor\n */\nvar TrainStream = function (_Writable) {\n  _inherits(TrainStream, _Writable);\n\n  function TrainStream(opts) {\n    var _ret;\n\n    _classCallCheck(this, TrainStream);\n\n    var _this = _possibleConstructorReturn(this, (TrainStream.__proto__ || Object.getPrototypeOf(TrainStream)).call(this, {\n      objectMode: true\n    }));\n\n    opts = opts || {};\n\n    // require the neuralNetwork\n    if (!opts.neuralNetwork) {\n      throw new Error('no neural network specified');\n    }\n\n    _this.neuralNetwork = opts.neuralNetwork;\n    _this.dataFormatDetermined = false;\n\n    _this.inputKeys = [];\n    _this.outputKeys = []; // keeps track of keys seen\n    _this.i = 0; // keep track of the for loop i variable that we got rid of\n    _this.iterations = opts.iterations || 20000;\n    _this.errorThresh = opts.errorThresh || 0.005;\n    _this.log = opts.log ? typeof opts.log === 'function' ? opts.log : console.log : false;\n    _this.logPeriod = opts.logPeriod || 10;\n    _this.callback = opts.callback;\n    _this.callbackPeriod = opts.callbackPeriod || 10;\n    _this.floodCallback = opts.floodCallback;\n    _this.doneTrainingCallback = opts.doneTrainingCallback;\n\n    _this.size = 0;\n    _this.count = 0;\n\n    _this.sum = 0;\n\n    _this.on('finish', _this.finishStreamIteration.bind(_this));\n\n    return _ret = _this, _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * _write expects data to be in the form of a datum. ie. {input: {a: 1 b: 0}, output: {z: 0}}\n   * @param chunk\n   * @param enc\n   * @param next\n   * @returns {*}\n   * @private\n   */\n\n\n  _createClass(TrainStream, [{\n    key: '_write',\n    value: function _write(chunk, enc, next) {\n      if (!chunk) {\n        // check for the end of one iteration of the stream\n        this.emit('finish');\n        return next();\n      }\n\n      if (!this.dataFormatDetermined) {\n        this.size++;\n        this.inputKeys = uniques(this.inputKeys.slice(0).concat(Object.keys(chunk.input)));\n        this.outputKeys = uniques(this.outputKeys.slice(0).concat(Object.keys(chunk.output)));\n        this.firstDatum = this.firstDatum || chunk;\n        return next();\n      }\n\n      this.count++;\n\n      var data = this.neuralNetwork.formatData(chunk);\n      this.trainDatum(data[0]);\n\n      // tell the Readable Stream that we are ready for more data\n      next();\n    }\n\n    /**\n     *\n     * @param datum\n     */\n\n  }, {\n    key: 'trainDatum',\n    value: function trainDatum(datum) {\n      var err = this.neuralNetwork.trainPattern(datum.input, datum.output);\n      this.sum += err;\n    }\n\n    /**\n     *\n     * @returns {*}\n     */\n\n  }, {\n    key: 'finishStreamIteration',\n    value: function finishStreamIteration() {\n      if (this.dataFormatDetermined && this.size !== this.count) {\n        this.log('This iteration\\'s data length was different from the first.');\n      }\n\n      if (!this.dataFormatDetermined) {\n        // create the lookup\n        this.neuralNetwork.inputLookup = _lookup2.default.lookupFromArray(this.inputKeys);\n        if (!Array.isArray(this.firstDatum.output)) {\n          this.neuralNetwork.outputLookup = _lookup2.default.lookupFromArray(this.outputKeys);\n        }\n\n        var data = this.neuralNetwork.formatData(this.firstDatum);\n        var sizes = [];\n        var inputSize = data[0].input.length;\n        var outputSize = data[0].output.length;\n        var hiddenSizes = this.hiddenSizes;\n        if (!hiddenSizes) {\n          sizes.push(Math.max(3, Math.floor(inputSize / 2)));\n        } else {\n          hiddenSizes.forEach(function (size) {\n            sizes.push(size);\n          });\n        }\n\n        sizes.unshift(inputSize);\n        sizes.push(outputSize);\n\n        this.dataFormatDetermined = true;\n        this.neuralNetwork.initialize(sizes);\n\n        if (typeof this.floodCallback === 'function') {\n          this.floodCallback();\n        }\n        return;\n      }\n\n      var error = this.sum / this.size;\n\n      if (this.log && this.i % this.logPeriod == 0) {\n        this.log('iterations:', this.i, 'training error:', error);\n      }\n      if (this.callback && this.i % this.callbackPeriod == 0) {\n        this.callback({\n          error: error,\n          iterations: this.i\n        });\n      }\n\n      this.sum = 0;\n      this.count = 0;\n      // update the iterations\n      this.i++;\n\n      // do a check here to see if we need the stream again\n      if (this.i < this.iterations && error > this.errorThresh) {\n        if (typeof this.floodCallback === 'function') {\n          return this.floodCallback();\n        }\n      } else {\n        // done training\n        if (typeof this.doneTrainingCallback === 'function') {\n          return this.doneTrainingCallback({\n            error: error,\n            iterations: this.i\n          });\n        }\n      }\n    }\n  }]);\n\n  return TrainStream;\n}(_stream.Writable);\n\n/**\n *\n * https://gist.github.com/telekosmos/3b62a31a5c43f40849bb\n * @param arr\n * @returns {Array}\n */\n\n\nexports.default = TrainStream;\nfunction uniques(arr) {\n  // Sets cannot contain duplicate elements, which is what we want\n  return [].concat(_toConsumableArray(new Set(arr)));\n}\n//# sourceMappingURL=train-stream.js.map"},"lineCount":217}},"hash":"69e84274925cbbf22933b3f319c07ab8","cacheData":{"env":{}},"id":79}