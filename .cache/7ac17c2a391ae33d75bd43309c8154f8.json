{"dependencies":[{"name":"/Users/websi96/WU/nnfp/node_modules/gpu.js/package.json","includedInParent":true,"mtime":1528767275975},{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790947609},{"name":"/Users/websi96/WU/nnfp/node_modules/gpu.js/.babelrc","includedInParent":true,"mtime":1528157906000}],"generated":{"js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionBuilderBase\n  *\n  * @desc This handles all the raw state, converted state, etc. of a single function.\n  * [INTERNAL] A collection of functionNodes.\n  * \n  * @prop {Object} nodeMap - Object map, where nodeMap[function] = new FunctionNode;\n  * @prop {Object} gpu - The current gpu instance bound to this builder\n  * @prop {Object} rootKernel - The root kernel object, contains the paramNames, dimensions etc.\n  * \n  */\n\tfunction FunctionBuilderBase(gpu) {\n\t\t_classCallCheck(this, FunctionBuilderBase);\n\n\t\tthis.nodeMap = {};\n\t\tthis.nativeFunctions = {};\n\t\tthis.gpu = gpu;\n\t\tthis.rootKernel = null;\n\t\tthis.Node = null;\n\t}\n\n\t_createClass(FunctionBuilderBase, [{\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(functionName, glslFunctionString) {\n\t\t\tthis.nativeFunctions[functionName] = glslFunctionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunction\n   *\n   * @desc Instantiates a FunctionNode, and add it to the nodeMap\n   *\n   * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n   * @param {Function} jsFunction - JS Function to do conversion\n   * @param {Object} [options]\n   * @param {String[]|Object} [paramTypes] - Parameter type array, assumes all parameters are 'float' if falsey\n   * @param {String} [returnType] - The return type, assumes 'float' if falsey\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(functionName, jsFunction, options, paramTypes, returnType) {\n\t\t\tthis.addFunctionNode(new this.Node(functionName, jsFunction, options, paramTypes, returnType).setAddFunction(this.addFunction.bind(this)));\n\t\t}\n\t}, {\n\t\tkey: 'addFunctions',\n\t\tvalue: function addFunctions(functions, options) {\n\t\t\tif (functions) {\n\t\t\t\tif (Array.isArray(functions)) {\n\t\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\t\tthis.addFunction(null, functions[i], options);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var p in functions) {\n\t\t\t\t\t\tthis.addFunction(p, functions[p], options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'addNativeFunctions',\n\t\tvalue: function addNativeFunctions(nativeFunctions) {\n\t\t\tfor (var functionName in nativeFunctions) {\n\t\t\t\tif (!nativeFunctions.hasOwnProperty(functionName)) continue;\n\t\t\t\tthis.addNativeFunction(functionName, nativeFunctions[functionName]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunctionNode\n   *\n   * @desc Add the function node directly\n   *\n   * @param {functionNode} inNode - functionNode to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunctionNode',\n\t\tvalue: function addFunctionNode(inNode) {\n\t\t\tthis.nodeMap[inNode.functionName] = inNode;\n\t\t\tif (inNode.isRootKernel) {\n\t\t\t\tthis.rootKernel = inNode;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name traceFunctionCalls\n   *\n   * @desc Trace all the depending functions being called, from a single function\n   *\n   * This allow for 'unneeded' functions to be automatically optimized out.\n   * Note that the 0-index, is the starting function trace.\n   *\n   * @param {String} functionName - Function name to trace from, default to 'kernel'\n   * @param {String[]} retList - Returning list of function names that is traced. Including itself.\n   * @param {Object} [parent] - Parent node\n   *\n   * @returns {String[]}  Returning list of function names that is traced. Including itself.\n   */\n\n\t}, {\n\t\tkey: 'traceFunctionCalls',\n\t\tvalue: function traceFunctionCalls(functionName, retList, parent) {\n\t\t\tfunctionName = functionName || 'kernel';\n\t\t\tretList = retList || [];\n\n\t\t\tvar fNode = this.nodeMap[functionName];\n\t\t\tif (fNode) {\n\t\t\t\t// Check if function already exists\n\t\t\t\tvar functionIndex = retList.indexOf(functionName);\n\t\t\t\tif (functionIndex === -1) {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tfNode.parent = parent;\n\t\t\t\t\t}\n\t\t\t\t\tfNode.getFunctionString(); //ensure JS trace is done\n\t\t\t\t\tfor (var i = 0; i < fNode.calledFunctions.length; ++i) {\n\t\t\t\t\t\tthis.traceFunctionCalls(fNode.calledFunctions[i], retList, fNode);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/**\n      * https://github.com/gpujs/gpu.js/issues/207\n      * if dependent function is already in the list, because a function depends on it, and because it has\n      * already been traced, we know that we must move the dependent function to the end of the the retList.\n      * */\n\t\t\t\t\tvar dependantFunctionName = retList.splice(functionIndex, 1)[0];\n\t\t\t\t\tretList.push(dependantFunctionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.nativeFunctions[functionName]) {\n\t\t\t\tif (retList.indexOf(functionName) >= 0) {\n\t\t\t\t\t// Does nothing if already traced\n\t\t\t\t} else {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retList;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addKernel\n   *\n   * @desc Add a new kernel to this instance\n   *\n   * @param {String} fnString - Kernel function as a String\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   * @param {Array} paramNames - Parameters of the kernel\n   * @param {Array} paramTypes - Types of the parameters\n   *\n   *\n   * @returns {Object} The inserted kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addKernel',\n\t\tvalue: function addKernel(fnString, options, paramNames, paramTypes) {\n\t\t\tvar kernelNode = new this.Node('kernel', fnString, options, paramTypes);\n\t\t\tkernelNode.setAddFunction(this.addFunction.bind(this));\n\t\t\tkernelNode.paramNames = paramNames;\n\t\t\tkernelNode.paramTypes = paramTypes;\n\t\t\tkernelNode.isRootKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addSubKernel\n   *\n   * @desc Add a new sub-kernel to the current kernel instance\n   *\n   * @param {Function} jsFunction - Sub-kernel function (JavaScript)\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   * @param {Array} paramNames - Parameters of the sub-kernel\n   * @param {Array} returnType - Return type of the subKernel\n   *\n   * @returns {Object} The inserted sub-kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernel',\n\t\tvalue: function addSubKernel(jsFunction, options, paramTypes, returnType) {\n\t\t\tvar kernelNode = new this.Node(null, jsFunction, options, paramTypes, returnType);\n\t\t\tkernelNode.setAddFunction(this.addFunction.bind(this));\n\t\t\tkernelNode.isSubKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeString',\n\t\tvalue: function getPrototypeString(functionName) {\n\t\t\treturn this.getPrototypes(functionName).join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} [functionName] - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {Array} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypes',\n\t\tvalue: function getPrototypes(functionName) {\n\t\t\tthis.rootKernel.generate();\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n\t\t\t}\n\t\t\treturn this.getPrototypesFromFunctionNames(Object.keys(this.nodeMap));\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getStringFromFunctionNames\n   *\n   * @desc Get string from function names\n   *\n   * @param {String[]} functionList - List of function to build string\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getStringFromFunctionNames',\n\t\tvalue: function getStringFromFunctionNames(functionList) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar node = this.nodeMap[functionList[i]];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(this.nodeMap[functionList[i]].getFunctionString());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret.join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} [opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {Array} Prototypes of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypesFromFunctionNames',\n\t\tvalue: function getPrototypesFromFunctionNames(functionList, opt) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar functionName = functionList[i];\n\t\t\t\tvar node = this.nodeMap[functionName];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(node.getFunctionPrototypeString(opt));\n\t\t\t\t} else if (this.nativeFunctions[functionName]) {\n\t\t\t\t\tret.push(this.nativeFunctions[functionName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {String} Prototype string of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeStringFromFunctionNames',\n\t\tvalue: function getPrototypeStringFromFunctionNames(functionList, opt) {\n\t\t\treturn this.getPrototypesFromFunctionNames(functionList, opt).toString();\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getString\n   *\n   * Get string for a particular function name\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getString',\n\t\tvalue: function getString(functionName, opt) {\n\t\t\tif (opt === undefined) {\n\t\t\t\topt = {};\n\t\t\t}\n\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getStringFromFunctionNames(this.traceFunctionCalls(functionName, [], opt).reverse(), opt);\n\t\t\t}\n\t\t\treturn this.getStringFromFunctionNames(Object.keys(this.nodeMap), opt);\n\t\t}\n\t}]);\n\n\treturn FunctionBuilderBase;\n}();","map":{"mappings":[{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-builder-base.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}}],"sources":{"node_modules/gpu.js/dist/backend/function-builder-base.js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionBuilderBase\n  *\n  * @desc This handles all the raw state, converted state, etc. of a single function.\n  * [INTERNAL] A collection of functionNodes.\n  * \n  * @prop {Object} nodeMap - Object map, where nodeMap[function] = new FunctionNode;\n  * @prop {Object} gpu - The current gpu instance bound to this builder\n  * @prop {Object} rootKernel - The root kernel object, contains the paramNames, dimensions etc.\n  * \n  */\n\tfunction FunctionBuilderBase(gpu) {\n\t\t_classCallCheck(this, FunctionBuilderBase);\n\n\t\tthis.nodeMap = {};\n\t\tthis.nativeFunctions = {};\n\t\tthis.gpu = gpu;\n\t\tthis.rootKernel = null;\n\t\tthis.Node = null;\n\t}\n\n\t_createClass(FunctionBuilderBase, [{\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(functionName, glslFunctionString) {\n\t\t\tthis.nativeFunctions[functionName] = glslFunctionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunction\n   *\n   * @desc Instantiates a FunctionNode, and add it to the nodeMap\n   *\n   * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n   * @param {Function} jsFunction - JS Function to do conversion\n   * @param {Object} [options]\n   * @param {String[]|Object} [paramTypes] - Parameter type array, assumes all parameters are 'float' if falsey\n   * @param {String} [returnType] - The return type, assumes 'float' if falsey\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(functionName, jsFunction, options, paramTypes, returnType) {\n\t\t\tthis.addFunctionNode(new this.Node(functionName, jsFunction, options, paramTypes, returnType).setAddFunction(this.addFunction.bind(this)));\n\t\t}\n\t}, {\n\t\tkey: 'addFunctions',\n\t\tvalue: function addFunctions(functions, options) {\n\t\t\tif (functions) {\n\t\t\t\tif (Array.isArray(functions)) {\n\t\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\t\tthis.addFunction(null, functions[i], options);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var p in functions) {\n\t\t\t\t\t\tthis.addFunction(p, functions[p], options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'addNativeFunctions',\n\t\tvalue: function addNativeFunctions(nativeFunctions) {\n\t\t\tfor (var functionName in nativeFunctions) {\n\t\t\t\tif (!nativeFunctions.hasOwnProperty(functionName)) continue;\n\t\t\t\tthis.addNativeFunction(functionName, nativeFunctions[functionName]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunctionNode\n   *\n   * @desc Add the function node directly\n   *\n   * @param {functionNode} inNode - functionNode to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunctionNode',\n\t\tvalue: function addFunctionNode(inNode) {\n\t\t\tthis.nodeMap[inNode.functionName] = inNode;\n\t\t\tif (inNode.isRootKernel) {\n\t\t\t\tthis.rootKernel = inNode;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name traceFunctionCalls\n   *\n   * @desc Trace all the depending functions being called, from a single function\n   *\n   * This allow for 'unneeded' functions to be automatically optimized out.\n   * Note that the 0-index, is the starting function trace.\n   *\n   * @param {String} functionName - Function name to trace from, default to 'kernel'\n   * @param {String[]} retList - Returning list of function names that is traced. Including itself.\n   * @param {Object} [parent] - Parent node\n   *\n   * @returns {String[]}  Returning list of function names that is traced. Including itself.\n   */\n\n\t}, {\n\t\tkey: 'traceFunctionCalls',\n\t\tvalue: function traceFunctionCalls(functionName, retList, parent) {\n\t\t\tfunctionName = functionName || 'kernel';\n\t\t\tretList = retList || [];\n\n\t\t\tvar fNode = this.nodeMap[functionName];\n\t\t\tif (fNode) {\n\t\t\t\t// Check if function already exists\n\t\t\t\tvar functionIndex = retList.indexOf(functionName);\n\t\t\t\tif (functionIndex === -1) {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tfNode.parent = parent;\n\t\t\t\t\t}\n\t\t\t\t\tfNode.getFunctionString(); //ensure JS trace is done\n\t\t\t\t\tfor (var i = 0; i < fNode.calledFunctions.length; ++i) {\n\t\t\t\t\t\tthis.traceFunctionCalls(fNode.calledFunctions[i], retList, fNode);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/**\n      * https://github.com/gpujs/gpu.js/issues/207\n      * if dependent function is already in the list, because a function depends on it, and because it has\n      * already been traced, we know that we must move the dependent function to the end of the the retList.\n      * */\n\t\t\t\t\tvar dependantFunctionName = retList.splice(functionIndex, 1)[0];\n\t\t\t\t\tretList.push(dependantFunctionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.nativeFunctions[functionName]) {\n\t\t\t\tif (retList.indexOf(functionName) >= 0) {\n\t\t\t\t\t// Does nothing if already traced\n\t\t\t\t} else {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retList;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addKernel\n   *\n   * @desc Add a new kernel to this instance\n   *\n   * @param {String} fnString - Kernel function as a String\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   * @param {Array} paramNames - Parameters of the kernel\n   * @param {Array} paramTypes - Types of the parameters\n   *\n   *\n   * @returns {Object} The inserted kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addKernel',\n\t\tvalue: function addKernel(fnString, options, paramNames, paramTypes) {\n\t\t\tvar kernelNode = new this.Node('kernel', fnString, options, paramTypes);\n\t\t\tkernelNode.setAddFunction(this.addFunction.bind(this));\n\t\t\tkernelNode.paramNames = paramNames;\n\t\t\tkernelNode.paramTypes = paramTypes;\n\t\t\tkernelNode.isRootKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addSubKernel\n   *\n   * @desc Add a new sub-kernel to the current kernel instance\n   *\n   * @param {Function} jsFunction - Sub-kernel function (JavaScript)\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   * @param {Array} paramNames - Parameters of the sub-kernel\n   * @param {Array} returnType - Return type of the subKernel\n   *\n   * @returns {Object} The inserted sub-kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernel',\n\t\tvalue: function addSubKernel(jsFunction, options, paramTypes, returnType) {\n\t\t\tvar kernelNode = new this.Node(null, jsFunction, options, paramTypes, returnType);\n\t\t\tkernelNode.setAddFunction(this.addFunction.bind(this));\n\t\t\tkernelNode.isSubKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeString',\n\t\tvalue: function getPrototypeString(functionName) {\n\t\t\treturn this.getPrototypes(functionName).join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} [functionName] - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {Array} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypes',\n\t\tvalue: function getPrototypes(functionName) {\n\t\t\tthis.rootKernel.generate();\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n\t\t\t}\n\t\t\treturn this.getPrototypesFromFunctionNames(Object.keys(this.nodeMap));\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getStringFromFunctionNames\n   *\n   * @desc Get string from function names\n   *\n   * @param {String[]} functionList - List of function to build string\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getStringFromFunctionNames',\n\t\tvalue: function getStringFromFunctionNames(functionList) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar node = this.nodeMap[functionList[i]];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(this.nodeMap[functionList[i]].getFunctionString());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret.join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} [opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {Array} Prototypes of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypesFromFunctionNames',\n\t\tvalue: function getPrototypesFromFunctionNames(functionList, opt) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar functionName = functionList[i];\n\t\t\t\tvar node = this.nodeMap[functionName];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(node.getFunctionPrototypeString(opt));\n\t\t\t\t} else if (this.nativeFunctions[functionName]) {\n\t\t\t\t\tret.push(this.nativeFunctions[functionName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {String} Prototype string of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeStringFromFunctionNames',\n\t\tvalue: function getPrototypeStringFromFunctionNames(functionList, opt) {\n\t\t\treturn this.getPrototypesFromFunctionNames(functionList, opt).toString();\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getString\n   *\n   * Get string for a particular function name\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getString',\n\t\tvalue: function getString(functionName, opt) {\n\t\t\tif (opt === undefined) {\n\t\t\t\topt = {};\n\t\t\t}\n\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getStringFromFunctionNames(this.traceFunctionCalls(functionName, [], opt).reverse(), opt);\n\t\t\t}\n\t\t\treturn this.getStringFromFunctionNames(Object.keys(this.nodeMap), opt);\n\t\t}\n\t}]);\n\n\treturn FunctionBuilderBase;\n}();"},"lineCount":359}},"hash":"70f9c44f4656844515276628faeb75d4","cacheData":{"env":{}},"id":344}