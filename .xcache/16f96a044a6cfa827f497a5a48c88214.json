{"dependencies":[{"name":"/Users/websi96/WU/nnfp/node_modules/brain.js/package.json","includedInParent":true,"mtime":1528768154807},{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790947609}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rowPluckB;\n/**\n * adds {from} deltas into {m} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowIndex\n */\nfunction rowPluckB(product, left, rowIndex) {\n  var columns = left.columns;\n  var rowBase = columns * rowIndex;\n  for (var column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n}\n//# sourceMappingURL=row-pluck-b.js.map","map":{"mappings":[{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rowPluckB;\n/**\n * adds {from} deltas into {m} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowIndex\n */\nfunction rowPluckB(product, left, rowIndex) {\n  var columns = left.columns;\n  var rowBase = columns * rowIndex;\n  for (var column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n}\n//# sourceMappingURL=row-pluck-b.js.map"},"lineCount":20}},"hash":"520d015311f59973b1527c265ccaa6e9","cacheData":{"env":{}},"id":286}