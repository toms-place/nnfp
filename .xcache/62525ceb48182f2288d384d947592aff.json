{"dependencies":[{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790947609},{"name":"brain.js","loc":{"line":1,"column":20},"parent":"/Users/websi96/WU/nnfp/src/neuralNets/rnn.js","resolved":"/Users/websi96/WU/nnfp/node_modules/brain.js/index.js"}],"generated":{"js":"var brain = require('brain.js');\n\nmodule.exports = function rnn(NeuralDataArray, callback) {\n    var config = {\n        iterations: 20000, // the maximum times to iterate the training data --> number greater than 0\n        errorThresh: 0.005, // the acceptable error percentage from training data --> number between 0 and 1\n        log: false, // true to use console.log, when a function is supplied it is used --> Either true or a function\n        logPeriod: 10, // iterations between logging out --> number greater than 0\n        learningRate: 0.3, // scales with delta to effect training rate --> number between 0 and 1\n        momentum: 0.1, // scales with next layer's change value --> number between 0 and 1\n        callback: null, // a periodic call back that can be triggered while training --> null or function\n        callbackPeriod: 10, // the number of iterations through the training data between callback calls --> number greater than 0\n        timeout: 60000 // the max number of milliseconds to train for --> number greater than 0\n    };\n    //create a simple recurrent neural network\n    var net = new brain.recurrent.LSTMTimeStep(config);\n    net.train(NeuralDataArray);\n\n    callback(net);\n};","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":1,"column":0}},{"name":"brain","generated":{"line":1,"column":4},"source":"src/neuralNets/rnn.js","original":{"line":1,"column":4}},{"name":"require","generated":{"line":1,"column":12},"source":"src/neuralNets/rnn.js","original":{"line":1,"column":12}},{"generated":{"line":1,"column":20},"source":"src/neuralNets/rnn.js","original":{"line":1,"column":20}},{"generated":{"line":1,"column":30},"source":"src/neuralNets/rnn.js","original":{"line":1,"column":12}},{"generated":{"line":1,"column":31},"source":"src/neuralNets/rnn.js","original":{"line":1,"column":0}},{"name":"module","generated":{"line":3,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":0}},{"name":"exports","generated":{"line":3,"column":7},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":7}},{"generated":{"line":3,"column":14},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":17},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":17}},{"name":"rnn","generated":{"line":3,"column":26},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":26}},{"generated":{"line":3,"column":29},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":17}},{"name":"NeuralDataArray","generated":{"line":3,"column":30},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":30}},{"generated":{"line":3,"column":45},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":17}},{"name":"callback","generated":{"line":3,"column":47},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":47}},{"generated":{"line":3,"column":55},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":17}},{"generated":{"line":3,"column":57},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":57}},{"generated":{"line":4,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":4}},{"name":"config","generated":{"line":4,"column":8},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":8}},{"generated":{"line":4,"column":17},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":17}},{"name":"iterations","generated":{"line":5,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":5,"column":8}},{"generated":{"line":5,"column":20},"source":"src/neuralNets/rnn.js","original":{"line":5,"column":20}},{"generated":{"line":5,"column":25},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":17}},{"generated":{"line":5,"column":27},"source":"src/neuralNets/rnn.js","original":{"line":5,"column":30}},{"name":"errorThresh","generated":{"line":6,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":6,"column":8}},{"generated":{"line":6,"column":21},"source":"src/neuralNets/rnn.js","original":{"line":6,"column":21}},{"generated":{"line":6,"column":26},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":17}},{"generated":{"line":6,"column":28},"source":"src/neuralNets/rnn.js","original":{"line":6,"column":30}},{"name":"log","generated":{"line":7,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":7,"column":8}},{"generated":{"line":7,"column":13},"source":"src/neuralNets/rnn.js","original":{"line":7,"column":13}},{"generated":{"line":7,"column":18},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":17}},{"generated":{"line":7,"column":20},"source":"src/neuralNets/rnn.js","original":{"line":7,"column":30}},{"name":"logPeriod","generated":{"line":8,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":8,"column":8}},{"generated":{"line":8,"column":19},"source":"src/neuralNets/rnn.js","original":{"line":8,"column":19}},{"generated":{"line":8,"column":21},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":17}},{"generated":{"line":8,"column":23},"source":"src/neuralNets/rnn.js","original":{"line":8,"column":30}},{"name":"learningRate","generated":{"line":9,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":9,"column":8}},{"generated":{"line":9,"column":22},"source":"src/neuralNets/rnn.js","original":{"line":9,"column":22}},{"generated":{"line":9,"column":25},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":17}},{"generated":{"line":9,"column":27},"source":"src/neuralNets/rnn.js","original":{"line":9,"column":30}},{"name":"momentum","generated":{"line":10,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":10,"column":8}},{"generated":{"line":10,"column":18},"source":"src/neuralNets/rnn.js","original":{"line":10,"column":18}},{"generated":{"line":10,"column":21},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":17}},{"generated":{"line":10,"column":23},"source":"src/neuralNets/rnn.js","original":{"line":10,"column":30}},{"name":"callback","generated":{"line":11,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":11,"column":8}},{"generated":{"line":11,"column":18},"source":"src/neuralNets/rnn.js","original":{"line":11,"column":18}},{"generated":{"line":11,"column":22},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":17}},{"generated":{"line":11,"column":24},"source":"src/neuralNets/rnn.js","original":{"line":11,"column":30}},{"name":"callbackPeriod","generated":{"line":12,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":12,"column":8}},{"generated":{"line":12,"column":24},"source":"src/neuralNets/rnn.js","original":{"line":12,"column":24}},{"generated":{"line":12,"column":26},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":17}},{"generated":{"line":12,"column":28},"source":"src/neuralNets/rnn.js","original":{"line":12,"column":30}},{"name":"timeout","generated":{"line":13,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":13,"column":8}},{"generated":{"line":13,"column":17},"source":"src/neuralNets/rnn.js","original":{"line":13,"column":17}},{"generated":{"line":13,"column":22},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":17}},{"generated":{"line":13,"column":23},"source":"src/neuralNets/rnn.js","original":{"line":13,"column":27}},{"generated":{"line":14,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":17}},{"generated":{"line":14,"column":5},"source":"src/neuralNets/rnn.js","original":{"line":4,"column":4}},{"generated":{"line":15,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":15,"column":4}},{"generated":{"line":16,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":16,"column":4}},{"name":"net","generated":{"line":16,"column":8},"source":"src/neuralNets/rnn.js","original":{"line":16,"column":8}},{"generated":{"line":16,"column":14},"source":"src/neuralNets/rnn.js","original":{"line":16,"column":14}},{"name":"brain","generated":{"line":16,"column":18},"source":"src/neuralNets/rnn.js","original":{"line":16,"column":18}},{"name":"recurrent","generated":{"line":16,"column":24},"source":"src/neuralNets/rnn.js","original":{"line":16,"column":24}},{"generated":{"line":16,"column":33},"source":"src/neuralNets/rnn.js","original":{"line":16,"column":18}},{"name":"LSTMTimeStep","generated":{"line":16,"column":34},"source":"src/neuralNets/rnn.js","original":{"line":16,"column":34}},{"generated":{"line":16,"column":46},"source":"src/neuralNets/rnn.js","original":{"line":16,"column":14}},{"name":"config","generated":{"line":16,"column":47},"source":"src/neuralNets/rnn.js","original":{"line":16,"column":47}},{"generated":{"line":16,"column":53},"source":"src/neuralNets/rnn.js","original":{"line":16,"column":14}},{"generated":{"line":16,"column":54},"source":"src/neuralNets/rnn.js","original":{"line":16,"column":4}},{"name":"net","generated":{"line":17,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":17,"column":4}},{"name":"train","generated":{"line":17,"column":8},"source":"src/neuralNets/rnn.js","original":{"line":17,"column":8}},{"generated":{"line":17,"column":13},"source":"src/neuralNets/rnn.js","original":{"line":17,"column":4}},{"name":"NeuralDataArray","generated":{"line":17,"column":14},"source":"src/neuralNets/rnn.js","original":{"line":17,"column":14}},{"generated":{"line":17,"column":29},"source":"src/neuralNets/rnn.js","original":{"line":17,"column":4}},{"name":"callback","generated":{"line":19,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":19,"column":4}},{"name":"net","generated":{"line":19,"column":13},"source":"src/neuralNets/rnn.js","original":{"line":19,"column":13}},{"generated":{"line":19,"column":16},"source":"src/neuralNets/rnn.js","original":{"line":19,"column":4}},{"generated":{"line":20,"column":0},"source":"src/neuralNets/rnn.js","original":{"line":21,"column":1}},{"generated":{"line":20,"column":1},"source":"src/neuralNets/rnn.js","original":{"line":3,"column":0}}],"sources":{"src/neuralNets/rnn.js":"var brain = require('brain.js');\n\nmodule.exports = function rnn(NeuralDataArray, callback) {\n    var config = {\n        iterations: 20000,    // the maximum times to iterate the training data --> number greater than 0\n        errorThresh: 0.005,   // the acceptable error percentage from training data --> number between 0 and 1\n        log: false,           // true to use console.log, when a function is supplied it is used --> Either true or a function\n        logPeriod: 10,        // iterations between logging out --> number greater than 0\n        learningRate: 0.3,    // scales with delta to effect training rate --> number between 0 and 1\n        momentum: 0.1,        // scales with next layer's change value --> number between 0 and 1\n        callback: null,       // a periodic call back that can be triggered while training --> null or function\n        callbackPeriod: 10,   // the number of iterations through the training data between callback calls --> number greater than 0\n        timeout: 60000     // the max number of milliseconds to train for --> number greater than 0\n    };\n    //create a simple recurrent neural network\n    var net = new brain.recurrent.LSTMTimeStep(config);\n    net.train(NeuralDataArray);\n    \n    callback(net);\n\n};"},"lineCount":null}},"hash":"3ce577638ec9033830d1490aa2882667","cacheData":{"env":{}},"id":37}