{"dependencies":[{"name":"/Users/websi96/WU/nnfp/node_modules/brain.js/package.json","includedInParent":true,"mtime":1528768154807},{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790947609}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = likely;\n/**\n *\n * @param {*} input\n * @param {NeuralNetwork} net\n * @returns {*}\n */\nfunction likely(input, net) {\n  var output = net.run(input);\n  var maxProp = null;\n  var maxValue = -1;\n  for (var prop in output) {\n    var value = output[prop];\n    if (value > maxValue) {\n      maxProp = prop;\n      maxValue = value;\n    }\n  }\n  return maxProp;\n}\n//# sourceMappingURL=likely.js.map","map":{"mappings":[{"source":"node_modules/brain.js/dist/likely.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/brain.js/dist/likely.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}}],"sources":{"node_modules/brain.js/dist/likely.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = likely;\n/**\n *\n * @param {*} input\n * @param {NeuralNetwork} net\n * @returns {*}\n */\nfunction likely(input, net) {\n  var output = net.run(input);\n  var maxProp = null;\n  var maxValue = -1;\n  for (var prop in output) {\n    var value = output[prop];\n    if (value > maxValue) {\n      maxProp = prop;\n      maxValue = value;\n    }\n  }\n  return maxProp;\n}\n//# sourceMappingURL=likely.js.map"},"lineCount":26}},"hash":"d57d5bae5f6c3a402772bee099f00a98","cacheData":{"env":{}},"id":75}