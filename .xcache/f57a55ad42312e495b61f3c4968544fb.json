{"dependencies":[{"name":"/Users/websi96/WU/nnfp/node_modules/gpu.js/package.json","includedInParent":true,"mtime":1528767275975},{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790947609},{"name":"/Users/websi96/WU/nnfp/node_modules/gpu.js/.babelrc","includedInParent":true,"mtime":1528157906000},{"name":"../kernel-base","loc":{"line":11,"column":25},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/cpu/kernel.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/kernel-base.js"},{"name":"../../core/utils","loc":{"line":12,"column":20},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/cpu/kernel.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/utils.js"},{"name":"./kernel-string","loc":{"line":13,"column":27},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/cpu/kernel.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/cpu/kernel-string.js"}],"generated":{"js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KernelBase = require('../kernel-base');\nvar utils = require('../../core/utils');\nvar kernelString = require('./kernel-string');\n\nmodule.exports = function (_KernelBase) {\n\t_inherits(CPUKernel, _KernelBase);\n\n\t/**\n  * @constructor CPUKernel\n  *\n  * @desc Kernel Implementation for CPU.\n  * \n  * <p>Instantiates properties to the CPU Kernel.</p>\n  *\n  * @extends KernelBase\n  *\n  * @prop {Object} thread - The thread dimensions, x, y and z\n  * @prop {Object} output - The canvas dimensions\n  * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n  * @prop {Function} run - Method to run the kernel\n  *\n  */\n\tfunction CPUKernel(fnString, settings) {\n\t\t_classCallCheck(this, CPUKernel);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPUKernel.__proto__ || Object.getPrototypeOf(CPUKernel)).call(this, fnString, settings));\n\n\t\t_this._fnBody = utils.getFunctionBodyFromString(fnString);\n\t\t_this._fn = null;\n\t\t_this.run = null;\n\t\t_this._canvasCtx = null;\n\t\t_this._imageData = null;\n\t\t_this._colorData = null;\n\t\t_this._kernelString = null;\n\t\t_this.thread = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tz: 0\n\t\t};\n\n\t\t_this.run = function () {\n\t\t\tthis.run = null;\n\t\t\tthis.build.apply(this, arguments);\n\t\t\treturn this.run.apply(this, arguments);\n\t\t}.bind(_this);\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf CPUKernel#\n  * @function\n  * @name validateOptions\n  *\n  * @desc Validate options related to CPU Kernel, such as \n  * dimensions size, and auto dimension support.\n  *\n  */\n\n\n\t_createClass(CPUKernel, [{\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow 'Auto dimensions only supported for kernels with only one input';\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'Texture') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow 'Auto dimensions not supported for input type: ' + argType;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name build\n   *\n   * @desc Builds the Kernel, by generating the kernel \n   * string using thread dimensions, and arguments \n   * supplied to the kernel.\n   *\n   * <p>If the graphical flag is enabled, canvas is used.</p>\n   *\n   */\n\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthis.setupParams(arguments);\n\t\t\tvar threadDim = this.threadDim = utils.clone(this.output);\n\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tvar canvas = this.getCanvas();\n\t\t\t\tcanvas.width = threadDim[0];\n\t\t\t\tcanvas.height = threadDim[1];\n\t\t\t\tthis._canvasCtx = canvas.getContext('2d');\n\t\t\t\tthis._imageData = this._canvasCtx.createImageData(threadDim[0], threadDim[1]);\n\t\t\t\tthis._colorData = new Uint8ClampedArray(threadDim[0] * threadDim[1] * 4);\n\t\t\t}\n\n\t\t\tvar kernelString = this.getKernelString();\n\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log('Options:');\n\t\t\t\tconsole.dir(this);\n\t\t\t\tconsole.log('Function output:');\n\t\t\t\tconsole.log(kernelString);\n\t\t\t}\n\n\t\t\tthis.kernelString = kernelString;\n\t\t\tthis.run = new Function([], kernelString).bind(this)();\n\t\t}\n\t}, {\n\t\tkey: 'color',\n\t\tvalue: function color(r, g, b, a) {\n\t\t\tif (typeof a === 'undefined') {\n\t\t\t\ta = 1;\n\t\t\t}\n\n\t\t\tr = Math.floor(r * 255);\n\t\t\tg = Math.floor(g * 255);\n\t\t\tb = Math.floor(b * 255);\n\t\t\ta = Math.floor(a * 255);\n\n\t\t\tvar width = this.output[0];\n\t\t\tvar height = this.output[1];\n\n\t\t\tvar x = this.thread.x;\n\t\t\tvar y = height - this.thread.y - 1;\n\n\t\t\tvar index = x + y * width;\n\n\t\t\tthis._colorData[index * 4 + 0] = r;\n\t\t\tthis._colorData[index * 4 + 1] = g;\n\t\t\tthis._colorData[index * 4 + 2] = b;\n\t\t\tthis._colorData[index * 4 + 3] = a;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name getKernelString\n   *\n   * @desc Generates kernel string for this kernel program.\n   * \n   * <p>If sub-kernels are supplied, they are also factored in.\n   * This string can be saved by calling the `toString` method\n   * and then can be reused later.</p>\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: 'getKernelString',\n\t\tvalue: function getKernelString() {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (this._kernelString !== null) return this._kernelString;\n\n\t\t\tvar builder = this.functionBuilder;\n\n\t\t\t// Thread dim fix (to make compilable)\n\t\t\tvar threadDim = this.threadDim || (this.threadDim = utils.clone(this.output));\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t}, this.paramNames, this.paramTypes);\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output\n\t\t\t});\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\tvar subKernel = this.subKernels[i];\n\t\t\t\t\tbuilder.addSubKernel(subKernel, {\n\t\t\t\t\t\tprototypeOnly: false,\n\t\t\t\t\t\tconstants: this.constants,\n\t\t\t\t\t\toutput: this.output,\n\t\t\t\t\t\tdebug: this.debug,\n\t\t\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t\t\t});\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(subKernel.name + 'Result');\n\t\t\t\t}\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tvar _i = 0;\n\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\tvar _subKernel = this.subKernelProperties[p];\n\t\t\t\t\tbuilder.addSubKernel(_subKernel);\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(_subKernel.name + 'Result');\n\t\t\t\t\t_i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar prototypes = builder.getPrototypes();\n\t\t\tvar kernel = null;\n\t\t\tif (prototypes.length > 1) {\n\t\t\t\tprototypes = prototypes.filter(function (fn) {\n\t\t\t\t\tif (/^function/.test(fn)) return fn;\n\t\t\t\t\tkernel = fn;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tkernel = prototypes.shift();\n\t\t\t}\n\t\t\tvar kernelString = this._kernelString = '\\n\\t\\tvar LOOP_MAX = ' + this._getLoopMaxString() + ';\\n\\t\\tvar _this = this;\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '  var ' + name + ' = null;\\n';\n\t\t\t}).join('')) + '\\n    return function (' + this.paramNames.map(function (paramName) {\n\t\t\t\treturn 'user_' + paramName;\n\t\t\t}).join(', ') + ') {\\n  ' + this._processInputs() + '\\n    var ret = new Array(' + threadDim[2] + ');\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '  ' + name + 'Z = new Array(' + threadDim[2] + ');\\n';\n\t\t\t}).join('')) + '\\n    for (this.thread.z = 0; this.thread.z < ' + threadDim[2] + '; this.thread.z++) {\\n      ret[this.thread.z] = new Array(' + threadDim[1] + ');\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + 'Z[this.thread.z] = new Array(' + threadDim[1] + ');\\n';\n\t\t\t}).join('')) + '\\n      for (this.thread.y = 0; this.thread.y < ' + threadDim[1] + '; this.thread.y++) {\\n        ret[this.thread.z][this.thread.y] = new Array(' + threadDim[0] + ');\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '      ' + name + 'Z[this.thread.z][this.thread.y] = new Array(' + threadDim[0] + ');\\n';\n\t\t\t}).join('')) + '\\n        for (this.thread.x = 0; this.thread.x < ' + threadDim[0] + '; this.thread.x++) {\\n          var kernelResult;\\n          ' + kernel + '\\n          ret[this.thread.z][this.thread.y][this.thread.x] = kernelResult;\\n' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '        ' + name + 'Z[this.thread.z][this.thread.y][this.thread.x] = ' + name + ';\\n';\n\t\t\t}).join('')) + '\\n          }\\n        }\\n      }\\n      \\n      if (this.graphical) {\\n        this._imageData.data.set(this._colorData);\\n        this._canvasCtx.putImageData(this._imageData, 0, 0);\\n        return;\\n      }\\n      \\n      if (this.output.length === 1) {\\n        ret = ret[0][0];\\n' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + ' = ' + name + 'Z[0][0];\\n';\n\t\t\t}).join('')) + '\\n      \\n    } else if (this.output.length === 2) {\\n      ret = ret[0];\\n      ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + ' = ' + name + 'Z[0];\\n';\n\t\t\t}).join('')) + '\\n    }\\n    \\n    ' + (this.subKernelOutputVariableNames === null ? 'return ret;\\n' : this.subKernels !== null ? 'var result = [\\n        ' + this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '' + name;\n\t\t\t}).join(',\\n') + '\\n      ];\\n      result.result = ret;\\n      return result;\\n' : 'return {\\n        result: ret,\\n        ' + Object.keys(this.subKernelProperties).map(function (name, i) {\n\t\t\t\treturn name + ': ' + _this2.subKernelOutputVariableNames[i];\n\t\t\t}).join(',\\n') + '\\n      };') + '\\n    ' + (prototypes.length > 0 ? prototypes.join('\\n') : '') + '\\n    }.bind(this);';\n\t\t\treturn kernelString;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name toString\n   *\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   *\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\treturn kernelString(this);\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name precompileKernelObj\n   *\n   * @desc Precompile the kernel into a single object, \n   * that can be used for building the execution kernel subsequently.\n   *\n   * @param {Array} argTypes - Array of argument types\n   *     \n   * Return:\n   *     Compiled kernel {Object}\n   *\n   */\n\n\t}, {\n\t\tkey: 'precompileKernelObj',\n\t\tvalue: function precompileKernelObj(argTypes) {\n\n\t\t\tvar threadDim = this.threadDim || (this.threadDim = utils.clone(this.output));\n\n\t\t\treturn {\n\t\t\t\tthreadDim: threadDim\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel\n   * @function\n   * @name compileKernel\n   * @static\n   *\n   * @desc Takes a previously precompiled kernel object,\n   * and complete compilation into a full kernel\n   * \n   * @returns {Function} Compiled kernel\n   *\n   */\n\n\t}, {\n\t\tkey: '_getLoopMaxString',\n\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getLoopMaxString\n   *\n   * @desc Get the maximum loop size String.\n   *\n   * @returns {String} result\n   *\n   */\n\t\tvalue: function _getLoopMaxString() {\n\t\t\treturn this.loopMaxIterations ? ' ' + parseInt(this.loopMaxIterations) + ';\\n' : ' 1000;\\n';\n\t\t}\n\t}, {\n\t\tkey: '_processInputs',\n\t\tvalue: function _processInputs() {\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < this.paramTypes.length; i++) {\n\t\t\t\tswitch (this.paramTypes[i]) {\n\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo2DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo3DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result.join(';\\n');\n\t\t}\n\t}, {\n\t\tkey: '_imageTo2DArray',\n\t\tvalue: function _imageTo2DArray(image) {\n\t\t\tthis._canvasCtx.drawImage(image, 0, 0, image.width, image.height);\n\t\t\tvar pixelsData = this._canvasCtx.getImageData(0, 0, image.width, image.height).data;\n\t\t\tvar imageArray = new Array(image.height);\n\t\t\tvar index = 0;\n\t\t\tfor (var y = image.height - 1; y >= 0; y--) {\n\t\t\t\timageArray[y] = new Array(image.width);\n\t\t\t\tfor (var x = 0; x < image.width; x++) {\n\t\t\t\t\timageArray[y][x] = [pixelsData[index++] / 255, pixelsData[index++] / 255, pixelsData[index++] / 255, pixelsData[index++] / 255];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn imageArray;\n\t\t}\n\t}, {\n\t\tkey: '_imageTo3DArray',\n\t\tvalue: function _imageTo3DArray(images) {\n\t\t\tvar imagesArray = new Array(images.length);\n\t\t\tfor (var i = 0; i < images.length; i++) {\n\t\t\t\timagesArray[i] = this._imageTo2DArray(images[i]);\n\t\t\t}\n\t\t\treturn imagesArray;\n\t\t}\n\t}], [{\n\t\tkey: 'compileKernel',\n\t\tvalue: function compileKernel(precompileObj) {\n\n\t\t\t// Extract values from precompiled obj\n\t\t\tvar threadDim = precompileObj.threadDim;\n\n\t\t\t// Normalize certain values : For actual build\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn CPUKernel;\n}(KernelBase);","map":{"mappings":[{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/gpu.js/dist/backend/cpu/kernel.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}}],"sources":{"node_modules/gpu.js/dist/backend/cpu/kernel.js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KernelBase = require('../kernel-base');\nvar utils = require('../../core/utils');\nvar kernelString = require('./kernel-string');\n\nmodule.exports = function (_KernelBase) {\n\t_inherits(CPUKernel, _KernelBase);\n\n\t/**\n  * @constructor CPUKernel\n  *\n  * @desc Kernel Implementation for CPU.\n  * \n  * <p>Instantiates properties to the CPU Kernel.</p>\n  *\n  * @extends KernelBase\n  *\n  * @prop {Object} thread - The thread dimensions, x, y and z\n  * @prop {Object} output - The canvas dimensions\n  * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n  * @prop {Function} run - Method to run the kernel\n  *\n  */\n\tfunction CPUKernel(fnString, settings) {\n\t\t_classCallCheck(this, CPUKernel);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPUKernel.__proto__ || Object.getPrototypeOf(CPUKernel)).call(this, fnString, settings));\n\n\t\t_this._fnBody = utils.getFunctionBodyFromString(fnString);\n\t\t_this._fn = null;\n\t\t_this.run = null;\n\t\t_this._canvasCtx = null;\n\t\t_this._imageData = null;\n\t\t_this._colorData = null;\n\t\t_this._kernelString = null;\n\t\t_this.thread = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tz: 0\n\t\t};\n\n\t\t_this.run = function () {\n\t\t\tthis.run = null;\n\t\t\tthis.build.apply(this, arguments);\n\t\t\treturn this.run.apply(this, arguments);\n\t\t}.bind(_this);\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf CPUKernel#\n  * @function\n  * @name validateOptions\n  *\n  * @desc Validate options related to CPU Kernel, such as \n  * dimensions size, and auto dimension support.\n  *\n  */\n\n\n\t_createClass(CPUKernel, [{\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow 'Auto dimensions only supported for kernels with only one input';\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'Texture') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow 'Auto dimensions not supported for input type: ' + argType;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name build\n   *\n   * @desc Builds the Kernel, by generating the kernel \n   * string using thread dimensions, and arguments \n   * supplied to the kernel.\n   *\n   * <p>If the graphical flag is enabled, canvas is used.</p>\n   *\n   */\n\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthis.setupParams(arguments);\n\t\t\tvar threadDim = this.threadDim = utils.clone(this.output);\n\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tvar canvas = this.getCanvas();\n\t\t\t\tcanvas.width = threadDim[0];\n\t\t\t\tcanvas.height = threadDim[1];\n\t\t\t\tthis._canvasCtx = canvas.getContext('2d');\n\t\t\t\tthis._imageData = this._canvasCtx.createImageData(threadDim[0], threadDim[1]);\n\t\t\t\tthis._colorData = new Uint8ClampedArray(threadDim[0] * threadDim[1] * 4);\n\t\t\t}\n\n\t\t\tvar kernelString = this.getKernelString();\n\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log('Options:');\n\t\t\t\tconsole.dir(this);\n\t\t\t\tconsole.log('Function output:');\n\t\t\t\tconsole.log(kernelString);\n\t\t\t}\n\n\t\t\tthis.kernelString = kernelString;\n\t\t\tthis.run = new Function([], kernelString).bind(this)();\n\t\t}\n\t}, {\n\t\tkey: 'color',\n\t\tvalue: function color(r, g, b, a) {\n\t\t\tif (typeof a === 'undefined') {\n\t\t\t\ta = 1;\n\t\t\t}\n\n\t\t\tr = Math.floor(r * 255);\n\t\t\tg = Math.floor(g * 255);\n\t\t\tb = Math.floor(b * 255);\n\t\t\ta = Math.floor(a * 255);\n\n\t\t\tvar width = this.output[0];\n\t\t\tvar height = this.output[1];\n\n\t\t\tvar x = this.thread.x;\n\t\t\tvar y = height - this.thread.y - 1;\n\n\t\t\tvar index = x + y * width;\n\n\t\t\tthis._colorData[index * 4 + 0] = r;\n\t\t\tthis._colorData[index * 4 + 1] = g;\n\t\t\tthis._colorData[index * 4 + 2] = b;\n\t\t\tthis._colorData[index * 4 + 3] = a;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name getKernelString\n   *\n   * @desc Generates kernel string for this kernel program.\n   * \n   * <p>If sub-kernels are supplied, they are also factored in.\n   * This string can be saved by calling the `toString` method\n   * and then can be reused later.</p>\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: 'getKernelString',\n\t\tvalue: function getKernelString() {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (this._kernelString !== null) return this._kernelString;\n\n\t\t\tvar builder = this.functionBuilder;\n\n\t\t\t// Thread dim fix (to make compilable)\n\t\t\tvar threadDim = this.threadDim || (this.threadDim = utils.clone(this.output));\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t}, this.paramNames, this.paramTypes);\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output\n\t\t\t});\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\tvar subKernel = this.subKernels[i];\n\t\t\t\t\tbuilder.addSubKernel(subKernel, {\n\t\t\t\t\t\tprototypeOnly: false,\n\t\t\t\t\t\tconstants: this.constants,\n\t\t\t\t\t\toutput: this.output,\n\t\t\t\t\t\tdebug: this.debug,\n\t\t\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t\t\t});\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(subKernel.name + 'Result');\n\t\t\t\t}\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tvar _i = 0;\n\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\tvar _subKernel = this.subKernelProperties[p];\n\t\t\t\t\tbuilder.addSubKernel(_subKernel);\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(_subKernel.name + 'Result');\n\t\t\t\t\t_i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar prototypes = builder.getPrototypes();\n\t\t\tvar kernel = null;\n\t\t\tif (prototypes.length > 1) {\n\t\t\t\tprototypes = prototypes.filter(function (fn) {\n\t\t\t\t\tif (/^function/.test(fn)) return fn;\n\t\t\t\t\tkernel = fn;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tkernel = prototypes.shift();\n\t\t\t}\n\t\t\tvar kernelString = this._kernelString = '\\n\\t\\tvar LOOP_MAX = ' + this._getLoopMaxString() + ';\\n\\t\\tvar _this = this;\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '  var ' + name + ' = null;\\n';\n\t\t\t}).join('')) + '\\n    return function (' + this.paramNames.map(function (paramName) {\n\t\t\t\treturn 'user_' + paramName;\n\t\t\t}).join(', ') + ') {\\n  ' + this._processInputs() + '\\n    var ret = new Array(' + threadDim[2] + ');\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '  ' + name + 'Z = new Array(' + threadDim[2] + ');\\n';\n\t\t\t}).join('')) + '\\n    for (this.thread.z = 0; this.thread.z < ' + threadDim[2] + '; this.thread.z++) {\\n      ret[this.thread.z] = new Array(' + threadDim[1] + ');\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + 'Z[this.thread.z] = new Array(' + threadDim[1] + ');\\n';\n\t\t\t}).join('')) + '\\n      for (this.thread.y = 0; this.thread.y < ' + threadDim[1] + '; this.thread.y++) {\\n        ret[this.thread.z][this.thread.y] = new Array(' + threadDim[0] + ');\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '      ' + name + 'Z[this.thread.z][this.thread.y] = new Array(' + threadDim[0] + ');\\n';\n\t\t\t}).join('')) + '\\n        for (this.thread.x = 0; this.thread.x < ' + threadDim[0] + '; this.thread.x++) {\\n          var kernelResult;\\n          ' + kernel + '\\n          ret[this.thread.z][this.thread.y][this.thread.x] = kernelResult;\\n' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '        ' + name + 'Z[this.thread.z][this.thread.y][this.thread.x] = ' + name + ';\\n';\n\t\t\t}).join('')) + '\\n          }\\n        }\\n      }\\n      \\n      if (this.graphical) {\\n        this._imageData.data.set(this._colorData);\\n        this._canvasCtx.putImageData(this._imageData, 0, 0);\\n        return;\\n      }\\n      \\n      if (this.output.length === 1) {\\n        ret = ret[0][0];\\n' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + ' = ' + name + 'Z[0][0];\\n';\n\t\t\t}).join('')) + '\\n      \\n    } else if (this.output.length === 2) {\\n      ret = ret[0];\\n      ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + ' = ' + name + 'Z[0];\\n';\n\t\t\t}).join('')) + '\\n    }\\n    \\n    ' + (this.subKernelOutputVariableNames === null ? 'return ret;\\n' : this.subKernels !== null ? 'var result = [\\n        ' + this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '' + name;\n\t\t\t}).join(',\\n') + '\\n      ];\\n      result.result = ret;\\n      return result;\\n' : 'return {\\n        result: ret,\\n        ' + Object.keys(this.subKernelProperties).map(function (name, i) {\n\t\t\t\treturn name + ': ' + _this2.subKernelOutputVariableNames[i];\n\t\t\t}).join(',\\n') + '\\n      };') + '\\n    ' + (prototypes.length > 0 ? prototypes.join('\\n') : '') + '\\n    }.bind(this);';\n\t\t\treturn kernelString;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name toString\n   *\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   *\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\treturn kernelString(this);\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name precompileKernelObj\n   *\n   * @desc Precompile the kernel into a single object, \n   * that can be used for building the execution kernel subsequently.\n   *\n   * @param {Array} argTypes - Array of argument types\n   *     \n   * Return:\n   *     Compiled kernel {Object}\n   *\n   */\n\n\t}, {\n\t\tkey: 'precompileKernelObj',\n\t\tvalue: function precompileKernelObj(argTypes) {\n\n\t\t\tvar threadDim = this.threadDim || (this.threadDim = utils.clone(this.output));\n\n\t\t\treturn {\n\t\t\t\tthreadDim: threadDim\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel\n   * @function\n   * @name compileKernel\n   * @static\n   *\n   * @desc Takes a previously precompiled kernel object,\n   * and complete compilation into a full kernel\n   * \n   * @returns {Function} Compiled kernel\n   *\n   */\n\n\t}, {\n\t\tkey: '_getLoopMaxString',\n\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getLoopMaxString\n   *\n   * @desc Get the maximum loop size String.\n   *\n   * @returns {String} result\n   *\n   */\n\t\tvalue: function _getLoopMaxString() {\n\t\t\treturn this.loopMaxIterations ? ' ' + parseInt(this.loopMaxIterations) + ';\\n' : ' 1000;\\n';\n\t\t}\n\t}, {\n\t\tkey: '_processInputs',\n\t\tvalue: function _processInputs() {\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < this.paramTypes.length; i++) {\n\t\t\t\tswitch (this.paramTypes[i]) {\n\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo2DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo3DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result.join(';\\n');\n\t\t}\n\t}, {\n\t\tkey: '_imageTo2DArray',\n\t\tvalue: function _imageTo2DArray(image) {\n\t\t\tthis._canvasCtx.drawImage(image, 0, 0, image.width, image.height);\n\t\t\tvar pixelsData = this._canvasCtx.getImageData(0, 0, image.width, image.height).data;\n\t\t\tvar imageArray = new Array(image.height);\n\t\t\tvar index = 0;\n\t\t\tfor (var y = image.height - 1; y >= 0; y--) {\n\t\t\t\timageArray[y] = new Array(image.width);\n\t\t\t\tfor (var x = 0; x < image.width; x++) {\n\t\t\t\t\timageArray[y][x] = [pixelsData[index++] / 255, pixelsData[index++] / 255, pixelsData[index++] / 255, pixelsData[index++] / 255];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn imageArray;\n\t\t}\n\t}, {\n\t\tkey: '_imageTo3DArray',\n\t\tvalue: function _imageTo3DArray(images) {\n\t\t\tvar imagesArray = new Array(images.length);\n\t\t\tfor (var i = 0; i < images.length; i++) {\n\t\t\t\timagesArray[i] = this._imageTo2DArray(images[i]);\n\t\t\t}\n\t\t\treturn imagesArray;\n\t\t}\n\t}], [{\n\t\tkey: 'compileKernel',\n\t\tvalue: function compileKernel(precompileObj) {\n\n\t\t\t// Extract values from precompiled obj\n\t\t\tvar threadDim = precompileObj.threadDim;\n\n\t\t\t// Normalize certain values : For actual build\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn CPUKernel;\n}(KernelBase);"},"lineCount":389}},"hash":"4b546fab51bf9c31b931d9adc1dfe4e4","cacheData":{"env":{}},"id":227}