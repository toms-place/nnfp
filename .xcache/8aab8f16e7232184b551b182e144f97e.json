{"dependencies":[{"name":"/Users/websi96/WU/nnfp/node_modules/brain.js/package.json","includedInParent":true,"mtime":1528768154807},{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790947609},{"name":"./neural-network","loc":{"line":11,"column":29},"parent":"/Users/websi96/WU/nnfp/node_modules/brain.js/dist/neural-network-gpu.js","resolved":"/Users/websi96/WU/nnfp/node_modules/brain.js/dist/neural-network.js"},{"name":"./lookup","loc":{"line":15,"column":22},"parent":"/Users/websi96/WU/nnfp/node_modules/brain.js/dist/neural-network-gpu.js","resolved":"/Users/websi96/WU/nnfp/node_modules/brain.js/dist/lookup.js"},{"name":"gpu.js","loc":{"line":19,"column":19},"parent":"/Users/websi96/WU/nnfp/node_modules/brain.js/dist/neural-network-gpu.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _neuralNetwork = require('./neural-network');\n\nvar _neuralNetwork2 = _interopRequireDefault(_neuralNetwork);\n\nvar _lookup = require('./lookup');\n\nvar _lookup2 = _interopRequireDefault(_lookup);\n\nvar _gpu = require('gpu.js');\n\nvar _gpu2 = _interopRequireDefault(_gpu);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * @param {object} options\n * @constructor\n */\nvar NeuralNetworkGPU = function (_NeuralNetwork) {\n  _inherits(NeuralNetworkGPU, _NeuralNetwork);\n\n  function NeuralNetworkGPU() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, NeuralNetworkGPU);\n\n    var _this = _possibleConstructorReturn(this, (NeuralNetworkGPU.__proto__ || Object.getPrototypeOf(NeuralNetworkGPU)).call(this, options));\n\n    _this.forwardPropagate = [];\n    _this.backwardPropagate = [];\n    _this.changesPropagate = [];\n    _this.biasesPropagate = [];\n    _this.biasCopies = [];\n    _this.copyBias = [];\n    _this.changesCopies = [];\n    _this.copyChanges = [];\n    _this.weightsCopies = [];\n    _this.copyWeights = [];\n    _this.errorCheckInterval = 100;\n    _this.gpu = new _gpu2.default({ mode: options.mode });\n    return _this;\n  }\n\n  /**\n   *\n   */\n\n\n  _createClass(NeuralNetworkGPU, [{\n    key: '_initialize',\n    value: function _initialize() {\n      _get(NeuralNetworkGPU.prototype.__proto__ || Object.getPrototypeOf(NeuralNetworkGPU.prototype), '_initialize', this).call(this);\n      this.buildRunInput();\n      this.buildCalculateDeltas();\n      this.buildGetChanges();\n      this.buildChangeBiases();\n      this.buildGetMSE();\n    }\n  }, {\n    key: 'setActivation',\n    value: function setActivation() {}\n\n    /**\n     *\n     * @param input\n     * @param target\n     * @param logErrorRate\n     */\n\n  }, {\n    key: '_trainPattern',\n    value: function _trainPattern(input, target, logErrorRate) {\n      // forward propagate\n      this.runInput(input);\n\n      // backward propagate\n      this.calculateDeltas(target);\n      this.getChanges();\n      this.changeBiases();\n\n      if (logErrorRate) {\n        return this.getMSE(this.errors[this.outputLayer])[0];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'buildRunInput',\n    value: function buildRunInput() {\n      var weightedSum = null;\n\n      switch (this.activation) {\n        case 'sigmoid':\n          weightedSum = weightedSumSigmoid;\n          break;\n        case 'relu':\n          weightedSum = weightedSumRelu;\n          break;\n        case 'leaky-relu':\n          weightedSum = weightedSumLeakyRelu;\n          break;\n        case 'tanh':\n          weightedSum = weightedSumTanh;\n          break;\n        default:\n          throw new Error('unknown activation ' + this.activation);\n      }\n\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n          output: [this.sizes[layer]],\n          outputToTexture: true,\n          hardcodeConstants: true,\n          constants: {\n            size: this.sizes[layer - 1]\n          }\n        });\n      }\n\n      this._texturizeInputData = this.gpu.createKernel(function (value) {\n        return value[this.thread.x];\n      }, {\n        output: [this.sizes[1]],\n        outputToTexture: true,\n        hardcodeConstants: true,\n        outputImmutable: true\n      });\n    }\n\n    /**\n     *\n     * @param input\n     * @returns {*}\n     */\n\n  }, {\n    key: 'runInput',\n    value: function runInput(input) {\n      var output = void 0;\n      this.outputs[0] = input;\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.outputs[layer] = this.forwardPropagate[layer](this.weights[layer], this.biases[layer], input);\n        output = input = this.outputs[layer];\n      }\n      return output;\n    }\n  }, {\n    key: 'buildCalculateDeltas',\n    value: function buildCalculateDeltas() {\n      var calcDeltas = null;\n\n      switch (this.activation) {\n        case 'sigmoid':\n          calcDeltas = calcDeltasSigmoid;\n          break;\n        case 'relu':\n          calcDeltas = calcDeltasRelu;\n          break;\n        case 'leaky-relu':\n          calcDeltas = calcDeltasLeakyRelu;\n          break;\n        case 'tanh':\n          calcDeltas = calcDeltasTanh;\n          break;\n        default:\n          throw new Error('unknown activation ' + this.activation);\n      }\n\n      for (var layer = this.outputLayer; layer > 0; layer--) {\n        if (layer === this.outputLayer) {\n          this.backwardPropagate[layer] = this.gpu.createKernelMap({\n            error: _gpu2.default.alias('calcErrorOutput', calcErrorOutput),\n            deltas: _gpu2.default.alias('calcDeltas', calcDeltas)\n          }, function (outputs, targets) {\n            var output = outputs[this.thread.x];\n            return calcDeltas(calcErrorOutput(output, targets), output);\n          }, {\n            output: [this.sizes[layer]],\n            outputToTexture: true,\n            hardcodeConstants: true\n          });\n        } else {\n          this.backwardPropagate[layer] = this.gpu.createKernelMap({\n            error: _gpu2.default.alias('calcError', calcError),\n            deltas: _gpu2.default.alias('calcDeltas', calcDeltas)\n          }, function (nextWeights, outputs, nextDeltas) {\n            var output = outputs[this.thread.x];\n            return calcDeltas(calcError(nextWeights, nextDeltas), output);\n          }, {\n            output: [this.sizes[layer]],\n            outputToTexture: true,\n            hardcodeConstants: true,\n            constants: {\n              size: this.deltas[layer + 1].length\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: 'calculateDeltas',\n    value: function calculateDeltas(target) {\n      for (var layer = this.outputLayer; layer > 0; layer--) {\n        var output = void 0;\n\n        if (layer === this.outputLayer) {\n          output = this.backwardPropagate[layer](this.outputs[layer], target);\n        } else {\n          output = this.backwardPropagate[layer](this.weights[layer + 1], this.outputs[layer], this.deltas[layer + 1]);\n        }\n\n        this.deltas[layer] = output.deltas;\n        this.errors[layer] = output.error;\n      }\n    }\n  }, {\n    key: 'buildGetChanges',\n    value: function buildGetChanges() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.changesPropagate[layer] = this.gpu.createKernelMap({\n          weights: _gpu2.default.alias('addWeights', addWeights),\n          changes: _gpu2.default.alias('calcChanges', calcChanges)\n        }, function (previousOutputs, deltas, weights, changes) {\n          var change = calcChanges(changes, deltas, previousOutputs);\n\n          return addWeights(change, weights);\n        }, {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          outputToTexture: true,\n          hardcodeConstants: true,\n          constants: {\n            size: this.outputs[layer - 1].length,\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum\n          }\n        });\n\n        this.copyChanges[layer] = this.gpu.createKernel(function (value) {\n          return value[this.thread.y][this.thread.x];\n        }, {\n          output: this.changesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true\n        });\n\n        this.copyWeights[layer] = this.gpu.createKernel(function (value) {\n          return value[this.thread.y][this.thread.x];\n        }, {\n          output: this.changesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true\n        });\n      }\n    }\n  }, {\n    key: 'getChanges',\n    value: function getChanges() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        var output = this.changesPropagate[layer](this.outputs[layer - 1], this.deltas[layer], this.weightsCopies[layer] || this.weights[layer], this.changesCopies[layer] || this.changes[layer]);\n        this.changes[layer] = output.changes;\n        this.weights[layer] = output.weights;\n\n        this.changesCopies[layer] = this.copyChanges[layer](output.changes);\n        this.weightsCopies[layer] = this.copyWeights[layer](output.weights);\n      }\n    }\n  }, {\n    key: 'buildChangeBiases',\n    value: function buildChangeBiases() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n          output: [this.sizes[layer]],\n          outputToTexture: true,\n          hardcodeConstants: true,\n          constants: {\n            learningRate: this.trainOpts.learningRate\n          }\n        });\n        this.copyBias[layer] = this.gpu.createKernel(function (value) {\n          return value[this.thread.x];\n        }, {\n          output: this.biasesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true\n        });\n      }\n    }\n  }, {\n    key: 'changeBiases',\n    value: function changeBiases() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.biases[layer] = this.biasesPropagate[layer](this.biasCopies[layer] || this.biases[layer], this.deltas[layer]);\n        this.biasCopies[layer] = this.copyBias[layer](this.biases[layer]);\n      }\n    }\n  }, {\n    key: 'buildGetMSE',\n    value: function buildGetMSE() {\n      this.getMSE = this.gpu.createKernel(mse, {\n        output: [1],\n        hardcodeConstants: true,\n        constants: {\n          size: this.sizes[this.outputLayer]\n        }\n      });\n    }\n\n    /**\n     *\n     * @param input\n     * @returns {*}\n     */\n\n  }, {\n    key: 'run',\n    value: function run(input) {\n      if (!this.isRunnable) return null;\n      if (this.inputLookup) {\n        input = _lookup2.default.toArray(this.inputLookup, input);\n      }\n      var inputTexture = this._texturizeInputData(input);\n      var outputTextures = this.runInput(inputTexture);\n      var output = outputTextures.toArray(this.gpu);\n\n      if (this.outputLookup) {\n        output = _lookup2.default.toHash(this.outputLookup, output);\n      }\n      return output;\n    }\n\n    /**\n     *\n     * @param data\n     * Verifies network sizes are initilaized\n     * If they are not it will initialize them based off the data set.\n     */\n\n  }, {\n    key: '_verifyIsInitialized',\n    value: function _verifyIsInitialized(data) {\n      var _this2 = this;\n\n      if (this.sizes) return;\n\n      this.sizes = [];\n      if (!data[0].size) {\n        data[0].size = { input: data[0].input.length, output: data[0].output.length };\n      }\n\n      this.sizes.push(data[0].size.input);\n      if (!this.hiddenSizes) {\n        this.sizes.push(Math.max(3, Math.floor(data[0].size.input / 2)));\n      } else {\n        this.hiddenSizes.forEach(function (size) {\n          _this2.sizes.push(size);\n        });\n      }\n      this.sizes.push(data[0].size.output);\n\n      this._initialize();\n    }\n\n    /**\n     *\n     * @param data\n     * @param options\n     * @protected\n     * @return { data, status, endTime }\n     */\n\n  }, {\n    key: '_prepTraining',\n    value: function _prepTraining(data, options) {\n      var _this3 = this;\n\n      this._updateTrainingOptions(options);\n      data = this._formatData(data);\n      var endTime = Date.now() + this.trainOpts.timeout;\n\n      var status = {\n        error: 1,\n        iterations: 0\n      };\n\n      this._verifyIsInitialized(data);\n\n      var texturizeOutputData = this.gpu.createKernel(function (value) {\n        return value[this.thread.x];\n      }, {\n        output: [data[0].output.length],\n        outputToTexture: true,\n        hardcodeConstants: true,\n        outputImmutable: true\n      });\n\n      return {\n        data: data.map(function (set) {\n          return {\n            size: set.size,\n            input: _this3._texturizeInputData(set.input),\n            output: texturizeOutputData(set.output)\n          };\n        }),\n        status: status,\n        endTime: endTime\n      };\n    }\n  }, {\n    key: 'toFunction',\n    value: function toFunction() {\n      throw new Error('not implemented on NeuralNetworkGPU');\n    }\n  }]);\n\n  return NeuralNetworkGPU;\n}(_neuralNetwork2.default);\n\nexports.default = NeuralNetworkGPU;\n\n\nfunction weightedSumSigmoid(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output, targets) {\n  return targets[this.thread.x] - output;\n}\n\nfunction calcDeltasSigmoid(error, output) {\n  //sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error, output) {\n  //relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error, output) {\n  //leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error, output) {\n  //tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(nextWeights, nextDeltas) {\n  var error = 0;\n  for (var k = 0; k < this.constants.size; k++) {\n    error += nextDeltas[k] * nextWeights[k][this.thread.x];\n  }\n  return error;\n}\n\nfunction calcChanges(previousChanges, deltas, previousOutputs) {\n  return this.constants.learningRate * deltas[this.thread.y] * previousOutputs[this.thread.x] + this.constants.momentum * previousChanges[this.thread.y][this.thread.x];\n}\n\nfunction addWeights(change, weights) {\n  return change + weights[this.thread.y][this.thread.x];\n}\n\nfunction addBiases(biases, deltas) {\n  return biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate;\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(errors) {\n  var sum = 0;\n  for (var i = 0; i < this.constants.size; i++) {\n    sum += Math.pow(errors[i], 2);\n  }\n  return sum / this.constants.size;\n}\n//# sourceMappingURL=neural-network-gpu.js.map","map":{"mappings":[{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/brain.js/dist/neural-network-gpu.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}}],"sources":{"node_modules/brain.js/dist/neural-network-gpu.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _neuralNetwork = require('./neural-network');\n\nvar _neuralNetwork2 = _interopRequireDefault(_neuralNetwork);\n\nvar _lookup = require('./lookup');\n\nvar _lookup2 = _interopRequireDefault(_lookup);\n\nvar _gpu = require('gpu.js');\n\nvar _gpu2 = _interopRequireDefault(_gpu);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * @param {object} options\n * @constructor\n */\nvar NeuralNetworkGPU = function (_NeuralNetwork) {\n  _inherits(NeuralNetworkGPU, _NeuralNetwork);\n\n  function NeuralNetworkGPU() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, NeuralNetworkGPU);\n\n    var _this = _possibleConstructorReturn(this, (NeuralNetworkGPU.__proto__ || Object.getPrototypeOf(NeuralNetworkGPU)).call(this, options));\n\n    _this.forwardPropagate = [];\n    _this.backwardPropagate = [];\n    _this.changesPropagate = [];\n    _this.biasesPropagate = [];\n    _this.biasCopies = [];\n    _this.copyBias = [];\n    _this.changesCopies = [];\n    _this.copyChanges = [];\n    _this.weightsCopies = [];\n    _this.copyWeights = [];\n    _this.errorCheckInterval = 100;\n    _this.gpu = new _gpu2.default({ mode: options.mode });\n    return _this;\n  }\n\n  /**\n   *\n   */\n\n\n  _createClass(NeuralNetworkGPU, [{\n    key: '_initialize',\n    value: function _initialize() {\n      _get(NeuralNetworkGPU.prototype.__proto__ || Object.getPrototypeOf(NeuralNetworkGPU.prototype), '_initialize', this).call(this);\n      this.buildRunInput();\n      this.buildCalculateDeltas();\n      this.buildGetChanges();\n      this.buildChangeBiases();\n      this.buildGetMSE();\n    }\n  }, {\n    key: 'setActivation',\n    value: function setActivation() {}\n\n    /**\n     *\n     * @param input\n     * @param target\n     * @param logErrorRate\n     */\n\n  }, {\n    key: '_trainPattern',\n    value: function _trainPattern(input, target, logErrorRate) {\n      // forward propagate\n      this.runInput(input);\n\n      // backward propagate\n      this.calculateDeltas(target);\n      this.getChanges();\n      this.changeBiases();\n\n      if (logErrorRate) {\n        return this.getMSE(this.errors[this.outputLayer])[0];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'buildRunInput',\n    value: function buildRunInput() {\n      var weightedSum = null;\n\n      switch (this.activation) {\n        case 'sigmoid':\n          weightedSum = weightedSumSigmoid;\n          break;\n        case 'relu':\n          weightedSum = weightedSumRelu;\n          break;\n        case 'leaky-relu':\n          weightedSum = weightedSumLeakyRelu;\n          break;\n        case 'tanh':\n          weightedSum = weightedSumTanh;\n          break;\n        default:\n          throw new Error('unknown activation ' + this.activation);\n      }\n\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n          output: [this.sizes[layer]],\n          outputToTexture: true,\n          hardcodeConstants: true,\n          constants: {\n            size: this.sizes[layer - 1]\n          }\n        });\n      }\n\n      this._texturizeInputData = this.gpu.createKernel(function (value) {\n        return value[this.thread.x];\n      }, {\n        output: [this.sizes[1]],\n        outputToTexture: true,\n        hardcodeConstants: true,\n        outputImmutable: true\n      });\n    }\n\n    /**\n     *\n     * @param input\n     * @returns {*}\n     */\n\n  }, {\n    key: 'runInput',\n    value: function runInput(input) {\n      var output = void 0;\n      this.outputs[0] = input;\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.outputs[layer] = this.forwardPropagate[layer](this.weights[layer], this.biases[layer], input);\n        output = input = this.outputs[layer];\n      }\n      return output;\n    }\n  }, {\n    key: 'buildCalculateDeltas',\n    value: function buildCalculateDeltas() {\n      var calcDeltas = null;\n\n      switch (this.activation) {\n        case 'sigmoid':\n          calcDeltas = calcDeltasSigmoid;\n          break;\n        case 'relu':\n          calcDeltas = calcDeltasRelu;\n          break;\n        case 'leaky-relu':\n          calcDeltas = calcDeltasLeakyRelu;\n          break;\n        case 'tanh':\n          calcDeltas = calcDeltasTanh;\n          break;\n        default:\n          throw new Error('unknown activation ' + this.activation);\n      }\n\n      for (var layer = this.outputLayer; layer > 0; layer--) {\n        if (layer === this.outputLayer) {\n          this.backwardPropagate[layer] = this.gpu.createKernelMap({\n            error: _gpu2.default.alias('calcErrorOutput', calcErrorOutput),\n            deltas: _gpu2.default.alias('calcDeltas', calcDeltas)\n          }, function (outputs, targets) {\n            var output = outputs[this.thread.x];\n            return calcDeltas(calcErrorOutput(output, targets), output);\n          }, {\n            output: [this.sizes[layer]],\n            outputToTexture: true,\n            hardcodeConstants: true\n          });\n        } else {\n          this.backwardPropagate[layer] = this.gpu.createKernelMap({\n            error: _gpu2.default.alias('calcError', calcError),\n            deltas: _gpu2.default.alias('calcDeltas', calcDeltas)\n          }, function (nextWeights, outputs, nextDeltas) {\n            var output = outputs[this.thread.x];\n            return calcDeltas(calcError(nextWeights, nextDeltas), output);\n          }, {\n            output: [this.sizes[layer]],\n            outputToTexture: true,\n            hardcodeConstants: true,\n            constants: {\n              size: this.deltas[layer + 1].length\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: 'calculateDeltas',\n    value: function calculateDeltas(target) {\n      for (var layer = this.outputLayer; layer > 0; layer--) {\n        var output = void 0;\n\n        if (layer === this.outputLayer) {\n          output = this.backwardPropagate[layer](this.outputs[layer], target);\n        } else {\n          output = this.backwardPropagate[layer](this.weights[layer + 1], this.outputs[layer], this.deltas[layer + 1]);\n        }\n\n        this.deltas[layer] = output.deltas;\n        this.errors[layer] = output.error;\n      }\n    }\n  }, {\n    key: 'buildGetChanges',\n    value: function buildGetChanges() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.changesPropagate[layer] = this.gpu.createKernelMap({\n          weights: _gpu2.default.alias('addWeights', addWeights),\n          changes: _gpu2.default.alias('calcChanges', calcChanges)\n        }, function (previousOutputs, deltas, weights, changes) {\n          var change = calcChanges(changes, deltas, previousOutputs);\n\n          return addWeights(change, weights);\n        }, {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          outputToTexture: true,\n          hardcodeConstants: true,\n          constants: {\n            size: this.outputs[layer - 1].length,\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum\n          }\n        });\n\n        this.copyChanges[layer] = this.gpu.createKernel(function (value) {\n          return value[this.thread.y][this.thread.x];\n        }, {\n          output: this.changesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true\n        });\n\n        this.copyWeights[layer] = this.gpu.createKernel(function (value) {\n          return value[this.thread.y][this.thread.x];\n        }, {\n          output: this.changesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true\n        });\n      }\n    }\n  }, {\n    key: 'getChanges',\n    value: function getChanges() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        var output = this.changesPropagate[layer](this.outputs[layer - 1], this.deltas[layer], this.weightsCopies[layer] || this.weights[layer], this.changesCopies[layer] || this.changes[layer]);\n        this.changes[layer] = output.changes;\n        this.weights[layer] = output.weights;\n\n        this.changesCopies[layer] = this.copyChanges[layer](output.changes);\n        this.weightsCopies[layer] = this.copyWeights[layer](output.weights);\n      }\n    }\n  }, {\n    key: 'buildChangeBiases',\n    value: function buildChangeBiases() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n          output: [this.sizes[layer]],\n          outputToTexture: true,\n          hardcodeConstants: true,\n          constants: {\n            learningRate: this.trainOpts.learningRate\n          }\n        });\n        this.copyBias[layer] = this.gpu.createKernel(function (value) {\n          return value[this.thread.x];\n        }, {\n          output: this.biasesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true\n        });\n      }\n    }\n  }, {\n    key: 'changeBiases',\n    value: function changeBiases() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.biases[layer] = this.biasesPropagate[layer](this.biasCopies[layer] || this.biases[layer], this.deltas[layer]);\n        this.biasCopies[layer] = this.copyBias[layer](this.biases[layer]);\n      }\n    }\n  }, {\n    key: 'buildGetMSE',\n    value: function buildGetMSE() {\n      this.getMSE = this.gpu.createKernel(mse, {\n        output: [1],\n        hardcodeConstants: true,\n        constants: {\n          size: this.sizes[this.outputLayer]\n        }\n      });\n    }\n\n    /**\n     *\n     * @param input\n     * @returns {*}\n     */\n\n  }, {\n    key: 'run',\n    value: function run(input) {\n      if (!this.isRunnable) return null;\n      if (this.inputLookup) {\n        input = _lookup2.default.toArray(this.inputLookup, input);\n      }\n      var inputTexture = this._texturizeInputData(input);\n      var outputTextures = this.runInput(inputTexture);\n      var output = outputTextures.toArray(this.gpu);\n\n      if (this.outputLookup) {\n        output = _lookup2.default.toHash(this.outputLookup, output);\n      }\n      return output;\n    }\n\n    /**\n     *\n     * @param data\n     * Verifies network sizes are initilaized\n     * If they are not it will initialize them based off the data set.\n     */\n\n  }, {\n    key: '_verifyIsInitialized',\n    value: function _verifyIsInitialized(data) {\n      var _this2 = this;\n\n      if (this.sizes) return;\n\n      this.sizes = [];\n      if (!data[0].size) {\n        data[0].size = { input: data[0].input.length, output: data[0].output.length };\n      }\n\n      this.sizes.push(data[0].size.input);\n      if (!this.hiddenSizes) {\n        this.sizes.push(Math.max(3, Math.floor(data[0].size.input / 2)));\n      } else {\n        this.hiddenSizes.forEach(function (size) {\n          _this2.sizes.push(size);\n        });\n      }\n      this.sizes.push(data[0].size.output);\n\n      this._initialize();\n    }\n\n    /**\n     *\n     * @param data\n     * @param options\n     * @protected\n     * @return { data, status, endTime }\n     */\n\n  }, {\n    key: '_prepTraining',\n    value: function _prepTraining(data, options) {\n      var _this3 = this;\n\n      this._updateTrainingOptions(options);\n      data = this._formatData(data);\n      var endTime = Date.now() + this.trainOpts.timeout;\n\n      var status = {\n        error: 1,\n        iterations: 0\n      };\n\n      this._verifyIsInitialized(data);\n\n      var texturizeOutputData = this.gpu.createKernel(function (value) {\n        return value[this.thread.x];\n      }, {\n        output: [data[0].output.length],\n        outputToTexture: true,\n        hardcodeConstants: true,\n        outputImmutable: true\n      });\n\n      return {\n        data: data.map(function (set) {\n          return {\n            size: set.size,\n            input: _this3._texturizeInputData(set.input),\n            output: texturizeOutputData(set.output)\n          };\n        }),\n        status: status,\n        endTime: endTime\n      };\n    }\n  }, {\n    key: 'toFunction',\n    value: function toFunction() {\n      throw new Error('not implemented on NeuralNetworkGPU');\n    }\n  }]);\n\n  return NeuralNetworkGPU;\n}(_neuralNetwork2.default);\n\nexports.default = NeuralNetworkGPU;\n\n\nfunction weightedSumSigmoid(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output, targets) {\n  return targets[this.thread.x] - output;\n}\n\nfunction calcDeltasSigmoid(error, output) {\n  //sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error, output) {\n  //relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error, output) {\n  //leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error, output) {\n  //tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(nextWeights, nextDeltas) {\n  var error = 0;\n  for (var k = 0; k < this.constants.size; k++) {\n    error += nextDeltas[k] * nextWeights[k][this.thread.x];\n  }\n  return error;\n}\n\nfunction calcChanges(previousChanges, deltas, previousOutputs) {\n  return this.constants.learningRate * deltas[this.thread.y] * previousOutputs[this.thread.x] + this.constants.momentum * previousChanges[this.thread.y][this.thread.x];\n}\n\nfunction addWeights(change, weights) {\n  return change + weights[this.thread.y][this.thread.x];\n}\n\nfunction addBiases(biases, deltas) {\n  return biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate;\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(errors) {\n  var sum = 0;\n  for (var i = 0; i < this.constants.size; i++) {\n    sum += Math.pow(errors[i], 2);\n  }\n  return sum / this.constants.size;\n}\n//# sourceMappingURL=neural-network-gpu.js.map"},"lineCount":526}},"hash":"bc341cc55253273775bfb6b1dbd85425","cacheData":{"env":{}},"id":78}