{"dependencies":[{"name":"/Users/websi96/WU/nnfp/node_modules/brain.js/package.json","includedInParent":true,"mtime":1528768154807},{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790947609},{"name":"../../utilities/random","loc":{"line":8,"column":22},"parent":"/Users/websi96/WU/nnfp/node_modules/brain.js/dist/recurrent/matrix/sample-i.js","resolved":"/Users/websi96/WU/nnfp/node_modules/brain.js/dist/utilities/random.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sampleI;\n\nvar _random = require('../../utilities/random');\n\n//prevent parser from renaming when calling toString() method later\nvar randomF = _random.randomF;\n/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nfunction sampleI(m) {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  var r = randomF(0, 1);\n  var x = 0;\n  var i = 0;\n  var w = m.weights;\n\n  while (true) {\n    x += w[i];\n    if (x > r) {\n      return i;\n    }\n    i++;\n  }\n}\n//# sourceMappingURL=sample-i.js.map","map":{"mappings":[{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/brain.js/dist/recurrent/matrix/sample-i.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules/brain.js/dist/recurrent/matrix/sample-i.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sampleI;\n\nvar _random = require('../../utilities/random');\n\n//prevent parser from renaming when calling toString() method later\nvar randomF = _random.randomF;\n/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nfunction sampleI(m) {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  var r = randomF(0, 1);\n  var x = 0;\n  var i = 0;\n  var w = m.weights;\n\n  while (true) {\n    x += w[i];\n    if (x > r) {\n      return i;\n    }\n    i++;\n  }\n}\n//# sourceMappingURL=sample-i.js.map"},"lineCount":33}},"hash":"bbd5b849485deaef3b08bcd4142500c1","cacheData":{"env":{}},"id":163}