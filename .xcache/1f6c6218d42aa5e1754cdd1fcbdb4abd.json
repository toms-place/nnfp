{"dependencies":[{"name":"/Users/websi96/WU/nnfp/node_modules/gpu.js/package.json","includedInParent":true,"mtime":1528767275975},{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790947609},{"name":"/Users/websi96/WU/nnfp/node_modules/gpu.js/.babelrc","includedInParent":true,"mtime":1528157906000},{"name":"./utils","loc":{"line":11,"column":20},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/gpu.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/utils.js"},{"name":"../backend/web-gl/runner","loc":{"line":12,"column":26},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/gpu.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/web-gl/runner.js"},{"name":"../backend/web-gl2/runner","loc":{"line":13,"column":27},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/gpu.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/web-gl2/runner.js"},{"name":"../backend/cpu/runner","loc":{"line":14,"column":24},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/gpu.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/cpu/runner.js"},{"name":"../backend/web-gl/validator-kernel","loc":{"line":15,"column":35},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/gpu.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/web-gl/validator-kernel.js"},{"name":"../backend/web-gl2/validator-kernel","loc":{"line":16,"column":36},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/gpu.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/web-gl2/validator-kernel.js"},{"name":"./gpu-core","loc":{"line":17,"column":22},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/gpu.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/gpu-core.js"}],"generated":{"js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar utils = require('./utils');\nvar WebGLRunner = require('../backend/web-gl/runner');\nvar WebGL2Runner = require('../backend/web-gl2/runner');\nvar CPURunner = require('../backend/cpu/runner');\nvar WebGLValidatorKernel = require('../backend/web-gl/validator-kernel');\nvar WebGL2ValidatorKernel = require('../backend/web-gl2/validator-kernel');\nvar GPUCore = require(\"./gpu-core\");\n\n/**\n * Initialises the GPU.js library class which manages the webGlContext for the created functions.\n * @class\n * @extends GPUCore\n */\n\nvar GPU = function (_GPUCore) {\n\t_inherits(GPU, _GPUCore);\n\n\t/**\n  * Creates an instance of GPU.\n  * @param {any} settings - Settings to set mode, andother properties. See #GPUCore\n  * @memberOf GPU#\n  */\n\tfunction GPU(settings) {\n\t\t_classCallCheck(this, GPU);\n\n\t\tvar _this = _possibleConstructorReturn(this, (GPU.__proto__ || Object.getPrototypeOf(GPU)).call(this, settings));\n\n\t\tsettings = settings || {};\n\t\t_this._canvas = settings.canvas || null;\n\t\t_this._webGl = settings.webGl || null;\n\t\tvar mode = settings.mode;\n\t\tvar detectedMode = void 0;\n\t\tif (!utils.isWebGlSupported()) {\n\t\t\tif (mode && mode !== 'cpu') {\n\t\t\t\tthrow new Error('A requested mode of \"' + mode + '\" and is not supported');\n\t\t\t} else {\n\t\t\t\tconsole.warn('Warning: gpu not supported, falling back to cpu support');\n\t\t\t\tdetectedMode = 'cpu';\n\t\t\t}\n\t\t} else {\n\t\t\tdetectedMode = mode || 'gpu';\n\t\t}\n\n\t\t_this.kernels = [];\n\n\t\tvar runnerSettings = {\n\t\t\tcanvas: _this._canvas,\n\t\t\twebGl: _this._webGl\n\t\t};\n\n\t\tswitch (detectedMode) {\n\t\t\t// public options\n\t\t\tcase 'cpu':\n\t\t\t\t_this._runner = new CPURunner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'gpu':\n\t\t\t\tvar Runner = _this.getGPURunner();\n\t\t\t\t_this._runner = new Runner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for testing\n\t\t\tcase 'webgl2':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'webgl':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for internal\n\t\t\tcase 'webgl2-validator':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGL2ValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tcase 'webgl-validator':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGLValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('\"' + mode + '\" mode is not defined');\n\t\t}\n\t\treturn _this;\n\t}\n\t/**\n  *\n  * This creates a callable function object to call the kernel function with the argument parameter set\n  *\n  * @name createKernel\n  * @function\n  * @memberOf GPU##\n  *\n  * @param {Function} fn - The calling to perform the conversion\n  * @param {Object} settings - The parameter configuration object\n  * @property {String} settings.dimensions - Thread dimension array (Defeaults to [1024])\n  * @property {String} settings.mode - CPU / GPU configuration mode (Defaults to null)\n  *\n  * The following modes are supported\n  * *'falsey'* : Attempts to build GPU mode, else fallbacks\n  * *'gpu'* : Attempts to build GPU mode, else fallbacks\n  * *'cpu'* : Forces JS fallback mode only\n  *\n  *\n  * @returns {Function} callable function to run\n  *\n  */\n\n\n\t_createClass(GPU, [{\n\t\tkey: 'createKernel',\n\t\tvalue: function createKernel(fn, settings) {\n\t\t\t//\n\t\t\t// basic parameters safety checks\n\t\t\t//\n\t\t\tif (typeof fn === 'undefined') {\n\t\t\t\tthrow 'Missing fn parameter';\n\t\t\t}\n\t\t\tif (!utils.isFunction(fn) && typeof fn !== 'string') {\n\t\t\t\tthrow 'fn parameter not a function';\n\t\t\t}\n\n\t\t\tvar kernel = this._runner.buildKernel(fn, settings || {});\n\n\t\t\t//if canvas didn't come from this, propagate from kernel\n\t\t\tif (!this._canvas) {\n\t\t\t\tthis._canvas = kernel.getCanvas();\n\t\t\t}\n\t\t\tif (!this._runner.canvas) {\n\t\t\t\tthis._runner.canvas = kernel.getCanvas();\n\t\t\t}\n\n\t\t\tthis.kernels.push(kernel);\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Create a super kernel which executes sub kernels\n   * and saves their output to be used with the next sub kernel.\n   * This can be useful if we want to save the output on one kernel,\n   * and then use it as an input to another kernel. *Machine Learning*\n   *\n   * @name createKernelMap\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Object|Array} subKernels - Sub kernels for this kernel\n   * @param {Function} rootKernel - Root kernel\n   *\n   * @returns {Function} callable kernel function\n   *\n   * @example\n   * const megaKernel = gpu.createKernelMap({\n   *   addResult: function add(a, b) {\n   *     return a[this.thread.x] + b[this.thread.x];\n   *   },\n   *   multiplyResult: function multiply(a, b) {\n   *     return a[this.thread.x] * b[this.thread.x];\n   *   },\n   *  }, function(a, b, c) {\n   *       return multiply(add(a, b), c);\n   * });\n   *\n   * megaKernel(a, b, c);\n   *\n   * Note: You can also define subKernels as an array of functions.\n   * > [add, multiply]\n   *\n   */\n\n\t}, {\n\t\tkey: 'createKernelMap',\n\t\tvalue: function createKernelMap() {\n\t\t\tvar fn = void 0;\n\t\t\tvar settings = void 0;\n\t\t\tif (typeof arguments[arguments.length - 2] === 'function') {\n\t\t\t\tfn = arguments[arguments.length - 2];\n\t\t\t\tsettings = arguments[arguments.length - 1];\n\t\t\t} else {\n\t\t\t\tfn = arguments[arguments.length - 1];\n\t\t\t}\n\n\t\t\tif (!utils.isWebGlDrawBuffersSupported()) {\n\t\t\t\tthis._runner = new CPURunner(settings);\n\t\t\t}\n\n\t\t\tvar kernel = this.createKernel(fn, settings);\n\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\tvar functions = arguments[0];\n\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\tkernel.addSubKernel(functions[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _functions = arguments[0];\n\t\t\t\tfor (var p in _functions) {\n\t\t\t\t\tif (!_functions.hasOwnProperty(p)) continue;\n\t\t\t\t\tkernel.addSubKernelProperty(p, _functions[p]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Combine different kernels into one super Kernel,\n   * useful to perform multiple operations inside one\n   * kernel without the penalty of data transfer between\n   * cpu and gpu.\n   *\n   * The number of kernel functions sent to this method can be variable.\n   * You can send in one, two, etc.\n   *\n   * @name combineKernels\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function} subKernels - Kernel function(s) to combine.\n   * @param {Function} rootKernel - Root kernel to combine kernels into\n   *\n   * @example\n   * \tcombineKernels(add, multiply, function(a,b,c){\n   *\t \treturn add(multiply(a,b), c)\n   *\t})\n   *\n   * @returns {Function} Callable kernel function\n   *\n   */\n\n\t}, {\n\t\tkey: 'combineKernels',\n\t\tvalue: function combineKernels() {\n\t\t\tvar lastKernel = arguments[arguments.length - 2];\n\t\t\tvar combinedKernel = arguments[arguments.length - 1];\n\t\t\tif (this.getMode() === 'cpu') return combinedKernel;\n\n\t\t\tvar canvas = arguments[0].getCanvas();\n\t\t\tvar webGl = arguments[0].getWebGl();\n\n\t\t\tfor (var i = 0; i < arguments.length - 1; i++) {\n\t\t\t\targuments[i].setCanvas(canvas).setWebGl(webGl).setOutputToTexture(true);\n\t\t\t}\n\n\t\t\treturn function () {\n\t\t\t\tcombinedKernel.apply(null, arguments);\n\t\t\t\tvar texSize = lastKernel.texSize;\n\t\t\t\tvar gl = lastKernel.getWebGl();\n\t\t\t\tvar threadDim = lastKernel.threadDim;\n\t\t\t\tvar result = void 0;\n\t\t\t\tif (lastKernel.floatOutput) {\n\t\t\t\t\tresult = new Float32Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.FLOAT, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);\n\t\t\t\t\tresult = new Float32Array(bytes.buffer);\n\t\t\t\t}\n\n\t\t\t\tresult = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n\t\t\t\tif (lastKernel.output.length === 1) {\n\t\t\t\t\treturn result;\n\t\t\t\t} else if (lastKernel.output.length === 2) {\n\t\t\t\t\treturn utils.splitArray(result, lastKernel.output[0]);\n\t\t\t\t} else if (lastKernel.output.length === 3) {\n\t\t\t\t\tvar cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n\t\t\t\t\treturn cube.map(function (x) {\n\t\t\t\t\t\treturn utils.splitArray(x, lastKernel.output[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: 'getGPURunner',\n\t\tvalue: function getGPURunner() {\n\t\t\tif (typeof WebGL2RenderingContext !== 'undefined') return WebGL2Runner;\n\t\t\tif (typeof WebGLRenderingContext !== 'undefined') return WebGLRunner;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional functions, that the kernel may call.\n   *\n   * @name addFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function|String} fn - JS Function to do conversion\n   * @param {String[]|Object} paramTypes - Parameter type array, assumes all parameters are 'float' if null\n   * @param {String} returnType - The return type, assumes 'float' if null\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(fn, paramTypes, returnType) {\n\t\t\tthis._runner.functionBuilder.addFunction(null, fn, paramTypes, returnType);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional native functions, that the kernel may call.\n   *\n   * @name addNativeFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {String} name - native function name, used for reverse lookup\n   * @param {String} nativeFunction - the native function implementation, as it would be defined in it's entirety\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(name, nativeFunction) {\n\t\t\tthis._runner.functionBuilder.addNativeFunction(name, nativeFunction);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Return the current mode in which gpu.js is executing.\n   * @name getMode\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {String} The current mode, \"cpu\", \"webgl\", etc.\n   *\n   */\n\n\t}, {\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn this._runner.getMode();\n\t\t}\n\n\t\t/**\n   *\n   * Return TRUE, if browser supports WebGl AND Canvas\n   *\n   * @name get isWebGlSupported\n   * @function\n   * @memberOf GPU#\n   *\n   * Note: This function can also be called directly `GPU.isWebGlSupported()`\n   *\n   * @returns {Boolean} TRUE if browser supports webGl\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGlSupported',\n\t\tvalue: function isWebGlSupported() {\n\t\t\treturn utils.isWebGlSupported();\n\t\t}\n\n\t\t/**\n   *\n   * Return the canvas object bound to this gpu instance.\n   *\n   * @name getCanvas\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} Canvas object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getCanvas',\n\t\tvalue: function getCanvas() {\n\t\t\treturn this._canvas;\n\t\t}\n\n\t\t/**\n   *\n   * Return the webGl object bound to this gpu instance.\n   *\n   * @name getWebGl\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} WebGl object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getWebGl',\n\t\tvalue: function getWebGl() {\n\t\t\treturn this._webGl;\n\t\t}\n\t}]);\n\n\treturn GPU;\n}(GPUCore);\n\n;\n\n// This ensure static methods are \"inherited\"\n// See: https://stackoverflow.com/questions/5441508/how-to-inherit-static-methods-from-base-class-in-javascript\nObject.assign(GPU, GPUCore);\n\nmodule.exports = GPU;","map":{"mappings":[{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}}],"sources":{"node_modules/gpu.js/dist/core/gpu.js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar utils = require('./utils');\nvar WebGLRunner = require('../backend/web-gl/runner');\nvar WebGL2Runner = require('../backend/web-gl2/runner');\nvar CPURunner = require('../backend/cpu/runner');\nvar WebGLValidatorKernel = require('../backend/web-gl/validator-kernel');\nvar WebGL2ValidatorKernel = require('../backend/web-gl2/validator-kernel');\nvar GPUCore = require(\"./gpu-core\");\n\n/**\n * Initialises the GPU.js library class which manages the webGlContext for the created functions.\n * @class\n * @extends GPUCore\n */\n\nvar GPU = function (_GPUCore) {\n\t_inherits(GPU, _GPUCore);\n\n\t/**\n  * Creates an instance of GPU.\n  * @param {any} settings - Settings to set mode, andother properties. See #GPUCore\n  * @memberOf GPU#\n  */\n\tfunction GPU(settings) {\n\t\t_classCallCheck(this, GPU);\n\n\t\tvar _this = _possibleConstructorReturn(this, (GPU.__proto__ || Object.getPrototypeOf(GPU)).call(this, settings));\n\n\t\tsettings = settings || {};\n\t\t_this._canvas = settings.canvas || null;\n\t\t_this._webGl = settings.webGl || null;\n\t\tvar mode = settings.mode;\n\t\tvar detectedMode = void 0;\n\t\tif (!utils.isWebGlSupported()) {\n\t\t\tif (mode && mode !== 'cpu') {\n\t\t\t\tthrow new Error('A requested mode of \"' + mode + '\" and is not supported');\n\t\t\t} else {\n\t\t\t\tconsole.warn('Warning: gpu not supported, falling back to cpu support');\n\t\t\t\tdetectedMode = 'cpu';\n\t\t\t}\n\t\t} else {\n\t\t\tdetectedMode = mode || 'gpu';\n\t\t}\n\n\t\t_this.kernels = [];\n\n\t\tvar runnerSettings = {\n\t\t\tcanvas: _this._canvas,\n\t\t\twebGl: _this._webGl\n\t\t};\n\n\t\tswitch (detectedMode) {\n\t\t\t// public options\n\t\t\tcase 'cpu':\n\t\t\t\t_this._runner = new CPURunner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'gpu':\n\t\t\t\tvar Runner = _this.getGPURunner();\n\t\t\t\t_this._runner = new Runner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for testing\n\t\t\tcase 'webgl2':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'webgl':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for internal\n\t\t\tcase 'webgl2-validator':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGL2ValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tcase 'webgl-validator':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGLValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('\"' + mode + '\" mode is not defined');\n\t\t}\n\t\treturn _this;\n\t}\n\t/**\n  *\n  * This creates a callable function object to call the kernel function with the argument parameter set\n  *\n  * @name createKernel\n  * @function\n  * @memberOf GPU##\n  *\n  * @param {Function} fn - The calling to perform the conversion\n  * @param {Object} settings - The parameter configuration object\n  * @property {String} settings.dimensions - Thread dimension array (Defeaults to [1024])\n  * @property {String} settings.mode - CPU / GPU configuration mode (Defaults to null)\n  *\n  * The following modes are supported\n  * *'falsey'* : Attempts to build GPU mode, else fallbacks\n  * *'gpu'* : Attempts to build GPU mode, else fallbacks\n  * *'cpu'* : Forces JS fallback mode only\n  *\n  *\n  * @returns {Function} callable function to run\n  *\n  */\n\n\n\t_createClass(GPU, [{\n\t\tkey: 'createKernel',\n\t\tvalue: function createKernel(fn, settings) {\n\t\t\t//\n\t\t\t// basic parameters safety checks\n\t\t\t//\n\t\t\tif (typeof fn === 'undefined') {\n\t\t\t\tthrow 'Missing fn parameter';\n\t\t\t}\n\t\t\tif (!utils.isFunction(fn) && typeof fn !== 'string') {\n\t\t\t\tthrow 'fn parameter not a function';\n\t\t\t}\n\n\t\t\tvar kernel = this._runner.buildKernel(fn, settings || {});\n\n\t\t\t//if canvas didn't come from this, propagate from kernel\n\t\t\tif (!this._canvas) {\n\t\t\t\tthis._canvas = kernel.getCanvas();\n\t\t\t}\n\t\t\tif (!this._runner.canvas) {\n\t\t\t\tthis._runner.canvas = kernel.getCanvas();\n\t\t\t}\n\n\t\t\tthis.kernels.push(kernel);\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Create a super kernel which executes sub kernels\n   * and saves their output to be used with the next sub kernel.\n   * This can be useful if we want to save the output on one kernel,\n   * and then use it as an input to another kernel. *Machine Learning*\n   *\n   * @name createKernelMap\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Object|Array} subKernels - Sub kernels for this kernel\n   * @param {Function} rootKernel - Root kernel\n   *\n   * @returns {Function} callable kernel function\n   *\n   * @example\n   * const megaKernel = gpu.createKernelMap({\n   *   addResult: function add(a, b) {\n   *     return a[this.thread.x] + b[this.thread.x];\n   *   },\n   *   multiplyResult: function multiply(a, b) {\n   *     return a[this.thread.x] * b[this.thread.x];\n   *   },\n   *  }, function(a, b, c) {\n   *       return multiply(add(a, b), c);\n   * });\n   *\n   * megaKernel(a, b, c);\n   *\n   * Note: You can also define subKernels as an array of functions.\n   * > [add, multiply]\n   *\n   */\n\n\t}, {\n\t\tkey: 'createKernelMap',\n\t\tvalue: function createKernelMap() {\n\t\t\tvar fn = void 0;\n\t\t\tvar settings = void 0;\n\t\t\tif (typeof arguments[arguments.length - 2] === 'function') {\n\t\t\t\tfn = arguments[arguments.length - 2];\n\t\t\t\tsettings = arguments[arguments.length - 1];\n\t\t\t} else {\n\t\t\t\tfn = arguments[arguments.length - 1];\n\t\t\t}\n\n\t\t\tif (!utils.isWebGlDrawBuffersSupported()) {\n\t\t\t\tthis._runner = new CPURunner(settings);\n\t\t\t}\n\n\t\t\tvar kernel = this.createKernel(fn, settings);\n\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\tvar functions = arguments[0];\n\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\tkernel.addSubKernel(functions[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _functions = arguments[0];\n\t\t\t\tfor (var p in _functions) {\n\t\t\t\t\tif (!_functions.hasOwnProperty(p)) continue;\n\t\t\t\t\tkernel.addSubKernelProperty(p, _functions[p]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Combine different kernels into one super Kernel,\n   * useful to perform multiple operations inside one\n   * kernel without the penalty of data transfer between\n   * cpu and gpu.\n   *\n   * The number of kernel functions sent to this method can be variable.\n   * You can send in one, two, etc.\n   *\n   * @name combineKernels\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function} subKernels - Kernel function(s) to combine.\n   * @param {Function} rootKernel - Root kernel to combine kernels into\n   *\n   * @example\n   * \tcombineKernels(add, multiply, function(a,b,c){\n   *\t \treturn add(multiply(a,b), c)\n   *\t})\n   *\n   * @returns {Function} Callable kernel function\n   *\n   */\n\n\t}, {\n\t\tkey: 'combineKernels',\n\t\tvalue: function combineKernels() {\n\t\t\tvar lastKernel = arguments[arguments.length - 2];\n\t\t\tvar combinedKernel = arguments[arguments.length - 1];\n\t\t\tif (this.getMode() === 'cpu') return combinedKernel;\n\n\t\t\tvar canvas = arguments[0].getCanvas();\n\t\t\tvar webGl = arguments[0].getWebGl();\n\n\t\t\tfor (var i = 0; i < arguments.length - 1; i++) {\n\t\t\t\targuments[i].setCanvas(canvas).setWebGl(webGl).setOutputToTexture(true);\n\t\t\t}\n\n\t\t\treturn function () {\n\t\t\t\tcombinedKernel.apply(null, arguments);\n\t\t\t\tvar texSize = lastKernel.texSize;\n\t\t\t\tvar gl = lastKernel.getWebGl();\n\t\t\t\tvar threadDim = lastKernel.threadDim;\n\t\t\t\tvar result = void 0;\n\t\t\t\tif (lastKernel.floatOutput) {\n\t\t\t\t\tresult = new Float32Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.FLOAT, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);\n\t\t\t\t\tresult = new Float32Array(bytes.buffer);\n\t\t\t\t}\n\n\t\t\t\tresult = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n\t\t\t\tif (lastKernel.output.length === 1) {\n\t\t\t\t\treturn result;\n\t\t\t\t} else if (lastKernel.output.length === 2) {\n\t\t\t\t\treturn utils.splitArray(result, lastKernel.output[0]);\n\t\t\t\t} else if (lastKernel.output.length === 3) {\n\t\t\t\t\tvar cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n\t\t\t\t\treturn cube.map(function (x) {\n\t\t\t\t\t\treturn utils.splitArray(x, lastKernel.output[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: 'getGPURunner',\n\t\tvalue: function getGPURunner() {\n\t\t\tif (typeof WebGL2RenderingContext !== 'undefined') return WebGL2Runner;\n\t\t\tif (typeof WebGLRenderingContext !== 'undefined') return WebGLRunner;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional functions, that the kernel may call.\n   *\n   * @name addFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function|String} fn - JS Function to do conversion\n   * @param {String[]|Object} paramTypes - Parameter type array, assumes all parameters are 'float' if null\n   * @param {String} returnType - The return type, assumes 'float' if null\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(fn, paramTypes, returnType) {\n\t\t\tthis._runner.functionBuilder.addFunction(null, fn, paramTypes, returnType);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional native functions, that the kernel may call.\n   *\n   * @name addNativeFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {String} name - native function name, used for reverse lookup\n   * @param {String} nativeFunction - the native function implementation, as it would be defined in it's entirety\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(name, nativeFunction) {\n\t\t\tthis._runner.functionBuilder.addNativeFunction(name, nativeFunction);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Return the current mode in which gpu.js is executing.\n   * @name getMode\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {String} The current mode, \"cpu\", \"webgl\", etc.\n   *\n   */\n\n\t}, {\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn this._runner.getMode();\n\t\t}\n\n\t\t/**\n   *\n   * Return TRUE, if browser supports WebGl AND Canvas\n   *\n   * @name get isWebGlSupported\n   * @function\n   * @memberOf GPU#\n   *\n   * Note: This function can also be called directly `GPU.isWebGlSupported()`\n   *\n   * @returns {Boolean} TRUE if browser supports webGl\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGlSupported',\n\t\tvalue: function isWebGlSupported() {\n\t\t\treturn utils.isWebGlSupported();\n\t\t}\n\n\t\t/**\n   *\n   * Return the canvas object bound to this gpu instance.\n   *\n   * @name getCanvas\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} Canvas object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getCanvas',\n\t\tvalue: function getCanvas() {\n\t\t\treturn this._canvas;\n\t\t}\n\n\t\t/**\n   *\n   * Return the webGl object bound to this gpu instance.\n   *\n   * @name getWebGl\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} WebGl object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getWebGl',\n\t\tvalue: function getWebGl() {\n\t\t\treturn this._webGl;\n\t\t}\n\t}]);\n\n\treturn GPU;\n}(GPUCore);\n\n;\n\n// This ensure static methods are \"inherited\"\n// See: https://stackoverflow.com/questions/5441508/how-to-inherit-static-methods-from-base-class-in-javascript\nObject.assign(GPU, GPUCore);\n\nmodule.exports = GPU;"},"lineCount":417}},"hash":"edfcf9c1a6ede8d1b6cfba3c5f98892c","cacheData":{"env":{}},"id":220}