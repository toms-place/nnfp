{"dependencies":[{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790009363},{"name":"brain.js","loc":{"line":1,"column":20},"parent":"/Users/websi96/WU/nnfp/src/neuralNets/rnn.js","resolved":"/Users/websi96/WU/nnfp/node_modules/brain.js/index.js"}],"generated":{"js":"var e=require(\"brain.js\");module.exports=function(r,a){var i=new e.recurrent.LSTMTimeStep({iterations:2e4,errorThresh:.005,log:!1,logPeriod:10,learningRate:.3,momentum:.1,callback:null,callbackPeriod:10,timeout:6e4});i.train(r),a(i)};","map":{"mappings":[{"source":"src/neuralNets/rnn.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"src/neuralNets/rnn.js","name":"brain","original":{"line":1,"column":4},"generated":{"line":1,"column":4}},{"source":"src/neuralNets/rnn.js","name":"require","original":{"line":1,"column":12},"generated":{"line":1,"column":6}},{"source":"src/neuralNets/rnn.js","original":{"line":1,"column":20},"generated":{"line":1,"column":14}},{"source":"src/neuralNets/rnn.js","name":"module","original":{"line":3,"column":0},"generated":{"line":1,"column":26}},{"source":"src/neuralNets/rnn.js","name":"exports","original":{"line":3,"column":7},"generated":{"line":1,"column":33}},{"source":"src/neuralNets/rnn.js","original":{"line":3,"column":17},"generated":{"line":1,"column":41}},{"source":"src/neuralNets/rnn.js","name":"NeuralDataArray","original":{"line":3,"column":30},"generated":{"line":1,"column":50}},{"source":"src/neuralNets/rnn.js","name":"callback","original":{"line":3,"column":47},"generated":{"line":1,"column":52}},{"source":"src/neuralNets/rnn.js","name":"config","original":{"line":4,"column":8},"generated":{"line":1,"column":55}},{"source":"src/neuralNets/rnn.js","name":"net","original":{"line":16,"column":8},"generated":{"line":1,"column":59}},{"source":"src/neuralNets/rnn.js","original":{"line":16,"column":14},"generated":{"line":1,"column":61}},{"source":"src/neuralNets/rnn.js","name":"brain","original":{"line":16,"column":18},"generated":{"line":1,"column":65}},{"source":"src/neuralNets/rnn.js","name":"recurrent","original":{"line":16,"column":24},"generated":{"line":1,"column":67}},{"source":"src/neuralNets/rnn.js","name":"LSTMTimeStep","original":{"line":16,"column":34},"generated":{"line":1,"column":77}},{"source":"src/neuralNets/rnn.js","original":{"line":5,"column":20},"generated":{"line":1,"column":91}},{"source":"src/neuralNets/rnn.js","original":{"line":5,"column":20},"generated":{"line":1,"column":102}},{"source":"src/neuralNets/rnn.js","original":{"line":6,"column":21},"generated":{"line":1,"column":106}},{"source":"src/neuralNets/rnn.js","original":{"line":6,"column":21},"generated":{"line":1,"column":118}},{"source":"src/neuralNets/rnn.js","original":{"line":7,"column":13},"generated":{"line":1,"column":123}},{"source":"src/neuralNets/rnn.js","original":{"line":7,"column":13},"generated":{"line":1,"column":128}},{"source":"src/neuralNets/rnn.js","original":{"line":8,"column":19},"generated":{"line":1,"column":130}},{"source":"src/neuralNets/rnn.js","original":{"line":8,"column":19},"generated":{"line":1,"column":140}},{"source":"src/neuralNets/rnn.js","original":{"line":9,"column":22},"generated":{"line":1,"column":143}},{"source":"src/neuralNets/rnn.js","original":{"line":9,"column":22},"generated":{"line":1,"column":156}},{"source":"src/neuralNets/rnn.js","original":{"line":10,"column":18},"generated":{"line":1,"column":159}},{"source":"src/neuralNets/rnn.js","original":{"line":10,"column":18},"generated":{"line":1,"column":168}},{"source":"src/neuralNets/rnn.js","original":{"line":11,"column":18},"generated":{"line":1,"column":171}},{"source":"src/neuralNets/rnn.js","original":{"line":11,"column":18},"generated":{"line":1,"column":180}},{"source":"src/neuralNets/rnn.js","original":{"line":12,"column":24},"generated":{"line":1,"column":185}},{"source":"src/neuralNets/rnn.js","original":{"line":12,"column":24},"generated":{"line":1,"column":200}},{"source":"src/neuralNets/rnn.js","original":{"line":13,"column":17},"generated":{"line":1,"column":203}},{"source":"src/neuralNets/rnn.js","original":{"line":13,"column":17},"generated":{"line":1,"column":211}},{"source":"src/neuralNets/rnn.js","name":"train","original":{"line":17,"column":8},"generated":{"line":1,"column":217}},{"source":"src/neuralNets/rnn.js","name":"train","original":{"line":17,"column":8},"generated":{"line":1,"column":219}},{"source":"src/neuralNets/rnn.js","name":"NeuralDataArray","original":{"line":17,"column":14},"generated":{"line":1,"column":225}},{"source":"src/neuralNets/rnn.js","name":"net","original":{"line":19,"column":13},"generated":{"line":1,"column":228}},{"source":"src/neuralNets/rnn.js","name":"net","original":{"line":19,"column":13},"generated":{"line":1,"column":230}}],"sources":{"src/neuralNets/rnn.js":"var brain = require('brain.js');\n\nmodule.exports = function rnn(NeuralDataArray, callback) {\n    var config = {\n        iterations: 20000,    // the maximum times to iterate the training data --> number greater than 0\n        errorThresh: 0.005,   // the acceptable error percentage from training data --> number between 0 and 1\n        log: false,           // true to use console.log, when a function is supplied it is used --> Either true or a function\n        logPeriod: 10,        // iterations between logging out --> number greater than 0\n        learningRate: 0.3,    // scales with delta to effect training rate --> number between 0 and 1\n        momentum: 0.1,        // scales with next layer's change value --> number between 0 and 1\n        callback: null,       // a periodic call back that can be triggered while training --> null or function\n        callbackPeriod: 10,   // the number of iterations through the training data between callback calls --> number greater than 0\n        timeout: 60000     // the max number of milliseconds to train for --> number greater than 0\n    };\n    //create a simple recurrent neural network\n    var net = new brain.recurrent.LSTMTimeStep(config);\n    net.train(NeuralDataArray);\n    \n    callback(net);\n\n};"},"lineCount":null}},"hash":"49c2d4fd7ef89e0db7338f1a5fbc3ed7","cacheData":{"env":{}},"id":60}