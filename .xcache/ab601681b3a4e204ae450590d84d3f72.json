{"dependencies":[{"name":"/Users/websi96/WU/nnfp/node_modules/gpu.js/package.json","includedInParent":true,"mtime":1528767275975},{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790947609},{"name":"/Users/websi96/WU/nnfp/node_modules/gpu.js/.babelrc","includedInParent":true,"mtime":1528157906000},{"name":"../core/utils","loc":{"line":9,"column":20},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/function-node-base.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/utils.js"},{"name":"acorn","loc":{"line":10,"column":20},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/backend/function-node-base.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/node_modules/acorn/dist/acorn.es.js"}],"generated":{"js":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar acorn = require('acorn');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionNodeBase\n  * \n  * @desc Represents a single function, inside JS, webGL, or openGL.\n  * \n  * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n  * \n  * @prop {String} functionName - Name of the function\n  * @prop {Function} jsFunction - The JS Function the node represents\n  * @prop {String} jsFunctionString - jsFunction.toString()\n  * @prop {String[]} paramNames - Parameter names of the function\n  * @prop {String[]} paramTypes - Shader land parameters type assumption\n  * @prop {Boolean} isRootKernel - Special indicator, for kernel function\n  * @prop {String} webglFunctionString - webgl converted function string\n  * @prop {String} openglFunctionString - opengl converted function string\n  * @prop {String[]} calledFunctions - List of all the functions called\n  * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n  * @param {Function|String} jsFunction - JS Function to do conversion\n  * @param {String[]|Object} paramTypes - Parameter type array, assumes all parameters are 'float' if null\n  * @param {String} returnType - The return type, assumes 'float' if null\n  *\n  */\n\tfunction BaseFunctionNode(functionName, jsFunction, options, paramTypes, returnType) {\n\t\t_classCallCheck(this, BaseFunctionNode);\n\n\t\t//\n\t\t// Internal vars setup\n\t\t//\n\t\tthis.calledFunctions = [];\n\t\tthis.calledFunctionsArguments = {};\n\t\tthis.addFunction = null;\n\t\tthis.isRootKernel = false;\n\t\tthis.isSubKernel = false;\n\t\tthis.parent = null;\n\t\tthis.debug = null;\n\t\tthis.prototypeOnly = null;\n\t\tthis.constants = null;\n\t\tthis.output = null;\n\t\tthis.declarations = {};\n\n\t\tif (options) {\n\t\t\tif (options.hasOwnProperty('debug')) {\n\t\t\t\tthis.debug = options.debug;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('prototypeOnly')) {\n\t\t\t\tthis.prototypeOnly = options.prototypeOnly;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('constants')) {\n\t\t\t\tthis.constants = options.constants;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('output')) {\n\t\t\t\tthis.output = options.output;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('loopMaxIterations')) {\n\t\t\t\tthis.loopMaxIterations = options.loopMaxIterations;\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\t// Missing jsFunction object exception\n\t\t//\n\t\tif (!jsFunction) {\n\t\t\tthrow 'jsFunction, parameter is missing';\n\t\t}\n\n\t\t//\n\t\t// Setup jsFunction and its string property + validate them\n\t\t//\n\t\tthis.jsFunctionString = jsFunction.toString();\n\t\tif (!utils.isFunctionString(this.jsFunctionString)) {\n\t\t\tconsole.error('jsFunction, to string conversion check failed: not a function?', this.jsFunctionString);\n\t\t\tthrow 'jsFunction, to string conversion check failed: not a function?';\n\t\t}\n\n\t\tif (!utils.isFunction(jsFunction)) {\n\t\t\t//throw 'jsFunction, is not a valid JS Function';\n\t\t\tthis.jsFunction = null;\n\t\t} else {\n\t\t\tthis.jsFunction = jsFunction;\n\t\t}\n\n\t\t//\n\t\t// Setup the function name property\n\t\t//\n\t\tthis.functionName = functionName || jsFunction && jsFunction.name || utils.getFunctionNameFromString(this.jsFunctionString);\n\n\t\tif (!this.functionName) {\n\t\t\tthrow 'jsFunction, missing name argument or value';\n\t\t}\n\n\t\t//\n\t\t// Extract parameter name, and its argument types\n\t\t//\n\t\tthis.paramNames = utils.getParamNamesFromString(this.jsFunctionString);\n\t\tif (paramTypes) {\n\t\t\tif (Array.isArray(paramTypes)) {\n\t\t\t\tif (paramTypes.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramTypes.length + ',' + this.paramNames.length + ')';\n\t\t\t\t}\n\t\t\t\tthis.paramTypes = paramTypes;\n\t\t\t} else if ((typeof paramTypes === 'undefined' ? 'undefined' : _typeof(paramTypes)) === 'object') {\n\t\t\t\tvar paramVariableNames = Object.keys(paramTypes);\n\t\t\t\tif (paramTypes.hasOwnProperty('returns')) {\n\t\t\t\t\tthis.returnType = paramTypes.returns;\n\t\t\t\t\tparamVariableNames.splice(paramVariableNames.indexOf('returns'), 1);\n\t\t\t\t}\n\t\t\t\tif (paramVariableNames.length > 0 && paramVariableNames.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramVariableNames.length + ',' + this.paramNames.length + ')';\n\t\t\t\t} else {\n\t\t\t\t\tthis.paramTypes = this.paramNames.map(function (key) {\n\t\t\t\t\t\tif (paramTypes.hasOwnProperty(key)) {\n\t\t\t\t\t\t\treturn paramTypes[key];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'float';\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.paramTypes = [];\n\t\t\t//TODO: Remove when we have proper type detection\n\t\t\t// for (let a = 0; a < this.paramNames.length; ++a) {\n\t\t\t// \tthis.paramTypes.push();\n\t\t\t// }\n\t\t}\n\n\t\t//\n\t\t// Return type handling\n\t\t//\n\t\tif (!this.returnType) {\n\t\t\tthis.returnType = returnType || 'float';\n\t\t}\n\t}\n\n\t_createClass(BaseFunctionNode, [{\n\t\tkey: 'isIdentifierConstant',\n\t\tvalue: function isIdentifierConstant(paramName) {\n\t\t\tif (!this.constants) return false;\n\t\t\treturn this.constants.hasOwnProperty(paramName);\n\t\t}\n\t}, {\n\t\tkey: 'setAddFunction',\n\t\tvalue: function setAddFunction(fn) {\n\t\t\tthis.addFunction = fn;\n\t\t\treturn this;\n\t\t}\n\t\t/**\n   * \n   * Core Functions\n   * \n   */\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJSFunction\n   *\n   * @desc Gets and return the stored JS Function.\n   * Note: that this internally eval the function, if only the string was provided on construction\n   *\n   * @returns {Function} The function object\n   *\n   */\n\n\t}, {\n\t\tkey: 'getJsFunction',\n\t\tvalue: function getJsFunction() {\n\t\t\tif (this.jsFunction) {\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tif (this.jsFunctionString) {\n\t\t\t\tthis.jsFunction = eval(this.jsFunctionString);\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tthrow 'Missing jsFunction, and jsFunctionString parameter';\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name astMemberExpressionUnroll\n   * @desc Parses the abstract syntax tree for binary expression.\n   *\n   * <p>Utility function for astCallExpression.</p>\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Function} funcParam - FunctionNode, that tracks compilation state\n   *\n   * @returns {String} the function namespace call, unrolled\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpressionUnroll',\n\t\tvalue: function astMemberExpressionUnroll(ast, funcParam) {\n\t\t\tif (ast.type === 'Identifier') {\n\t\t\t\treturn ast.name;\n\t\t\t} else if (ast.type === 'ThisExpression') {\n\t\t\t\treturn 'this';\n\t\t\t}\n\n\t\t\tif (ast.type === 'MemberExpression') {\n\t\t\t\tif (ast.object && ast.property) {\n\t\t\t\t\t//babel sniffing\n\t\t\t\t\tif (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n\t\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.property, funcParam);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.object, funcParam) + '.' + this.astMemberExpressionUnroll(ast.property, funcParam);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//babel sniffing\n\t\t\tif (ast.hasOwnProperty('expressions')) {\n\t\t\t\tvar firstExpression = ast.expressions[0];\n\t\t\t\tif (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.expressions[1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression_unroll', ast, funcParam);\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJsAST\n   *\n   * @desc Parses the class function JS, and returns its Abstract Syntax Tree object.\n   *\n   * This is used internally to convert to shader code\n   *\n   * @param {JISONParser} inParser - Parser to use, assumes in scope 'parser' if null\n   *\n   * @returns {ASTObject} The function AST Object, note that result is cached under this.jsFunctionAST;\n   *\n   */\n\n\t}, {\n\t\tkey: 'getJsAST',\n\t\tvalue: function getJsAST(inParser) {\n\t\t\tif (this.jsFunctionAST) {\n\t\t\t\treturn this.jsFunctionAST;\n\t\t\t}\n\n\t\t\tinParser = inParser || acorn;\n\t\t\tif (inParser === null) {\n\t\t\t\tthrow 'Missing JS to AST parser';\n\t\t\t}\n\n\t\t\tvar ast = inParser.parse('var ' + this.functionName + ' = ' + this.jsFunctionString + ';', {\n\t\t\t\tlocations: true\n\t\t\t});\n\t\t\tif (ast === null) {\n\t\t\t\tthrow 'Failed to parse JS code';\n\t\t\t}\n\n\t\t\t// take out the function object, outside the var declarations\n\t\t\tvar funcAST = ast.body[0].declarations[0].init;\n\t\t\tthis.jsFunctionAST = funcAST;\n\n\t\t\treturn funcAST;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getFunctionString\n   *\n   * @desc Returns the converted webgl shader function equivalent of the JS function\n   *\n   * @returns {String} webgl function string, result is cached under this.webGlFunctionString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionString',\n\t\tvalue: function getFunctionString() {\n\t\t\tthis.generate();\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name setFunctionString\n   *\n   * @desc Set the functionString value, overwriting it\n   *\n   * @param {String} functionString - Shader code string, representing the function\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFunctionString',\n\t\tvalue: function setFunctionString(functionString) {\n\t\t\tthis.functionString = functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getParamType\n   *\n   * @desc Return the type of parameter sent to subKernel/Kernel.\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Type of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getParamType',\n\t\tvalue: function getParamType(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) {\n\t\t\t\treturn this.declarations[paramName];\n\t\t\t} else {\n\t\t\t\tif (!this.parent) {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\t\t\tif (calledFunctionArgument[paramIndex] !== null) {\n\t\t\t\t\t\t\treturn this.paramTypes[paramIndex] = calledFunctionArgument[paramIndex].type;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getUserParamName\n   *\n   * @desc Return the name of the *user parameter*(subKernel parameter) corresponding \n   * to the parameter supplied to the kernel\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Name of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getUserParamName',\n\t\tvalue: function getUserParamName(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) return null;\n\t\t\tif (!this.parent) return null;\n\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\tif (calledFunctionArgument[paramIndex] !== null) {\n\t\t\t\t\treturn calledFunctionArgument[paramIndex].name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}, {\n\t\tkey: 'generate',\n\t\tvalue: function generate(options) {\n\t\t\tthrow new Error('generate not defined on BaseFunctionNode');\n\t\t}\n\n\t\t/**\n   * @function\n   * @name astErrorOutput\n   * @ignore\n   * @desc To throw the AST error, with its location.\n   *\n   * @todo add location support fpr the AST error\n   *\n   * @param {Object} error - the error message output\n   * @param {Object} ast - the AST object where the error is\n   * @param {Object} funcParam - FunctionNode, that tracks compilation state\n   */\n\n\t}, {\n\t\tkey: 'astErrorOutput',\n\t\tvalue: function astErrorOutput(error, ast, funcParam) {\n\t\t\tconsole.error(utils.getAstString(this.jsFunctionString, ast));\n\t\t\tconsole.error(error, ast, funcParam);\n\t\t\treturn error;\n\t\t}\n\t}, {\n\t\tkey: 'astDebuggerStatement',\n\t\tvalue: function astDebuggerStatement(arrNode, retArr, funcParam) {\n\t\t\treturn retArr;\n\t\t}\n\t}]);\n\n\treturn BaseFunctionNode;\n}();","map":{"mappings":[{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/gpu.js/dist/backend/function-node-base.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}}],"sources":{"node_modules/gpu.js/dist/backend/function-node-base.js":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar acorn = require('acorn');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionNodeBase\n  * \n  * @desc Represents a single function, inside JS, webGL, or openGL.\n  * \n  * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n  * \n  * @prop {String} functionName - Name of the function\n  * @prop {Function} jsFunction - The JS Function the node represents\n  * @prop {String} jsFunctionString - jsFunction.toString()\n  * @prop {String[]} paramNames - Parameter names of the function\n  * @prop {String[]} paramTypes - Shader land parameters type assumption\n  * @prop {Boolean} isRootKernel - Special indicator, for kernel function\n  * @prop {String} webglFunctionString - webgl converted function string\n  * @prop {String} openglFunctionString - opengl converted function string\n  * @prop {String[]} calledFunctions - List of all the functions called\n  * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n  * @param {Function|String} jsFunction - JS Function to do conversion\n  * @param {String[]|Object} paramTypes - Parameter type array, assumes all parameters are 'float' if null\n  * @param {String} returnType - The return type, assumes 'float' if null\n  *\n  */\n\tfunction BaseFunctionNode(functionName, jsFunction, options, paramTypes, returnType) {\n\t\t_classCallCheck(this, BaseFunctionNode);\n\n\t\t//\n\t\t// Internal vars setup\n\t\t//\n\t\tthis.calledFunctions = [];\n\t\tthis.calledFunctionsArguments = {};\n\t\tthis.addFunction = null;\n\t\tthis.isRootKernel = false;\n\t\tthis.isSubKernel = false;\n\t\tthis.parent = null;\n\t\tthis.debug = null;\n\t\tthis.prototypeOnly = null;\n\t\tthis.constants = null;\n\t\tthis.output = null;\n\t\tthis.declarations = {};\n\n\t\tif (options) {\n\t\t\tif (options.hasOwnProperty('debug')) {\n\t\t\t\tthis.debug = options.debug;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('prototypeOnly')) {\n\t\t\t\tthis.prototypeOnly = options.prototypeOnly;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('constants')) {\n\t\t\t\tthis.constants = options.constants;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('output')) {\n\t\t\t\tthis.output = options.output;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('loopMaxIterations')) {\n\t\t\t\tthis.loopMaxIterations = options.loopMaxIterations;\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\t// Missing jsFunction object exception\n\t\t//\n\t\tif (!jsFunction) {\n\t\t\tthrow 'jsFunction, parameter is missing';\n\t\t}\n\n\t\t//\n\t\t// Setup jsFunction and its string property + validate them\n\t\t//\n\t\tthis.jsFunctionString = jsFunction.toString();\n\t\tif (!utils.isFunctionString(this.jsFunctionString)) {\n\t\t\tconsole.error('jsFunction, to string conversion check failed: not a function?', this.jsFunctionString);\n\t\t\tthrow 'jsFunction, to string conversion check failed: not a function?';\n\t\t}\n\n\t\tif (!utils.isFunction(jsFunction)) {\n\t\t\t//throw 'jsFunction, is not a valid JS Function';\n\t\t\tthis.jsFunction = null;\n\t\t} else {\n\t\t\tthis.jsFunction = jsFunction;\n\t\t}\n\n\t\t//\n\t\t// Setup the function name property\n\t\t//\n\t\tthis.functionName = functionName || jsFunction && jsFunction.name || utils.getFunctionNameFromString(this.jsFunctionString);\n\n\t\tif (!this.functionName) {\n\t\t\tthrow 'jsFunction, missing name argument or value';\n\t\t}\n\n\t\t//\n\t\t// Extract parameter name, and its argument types\n\t\t//\n\t\tthis.paramNames = utils.getParamNamesFromString(this.jsFunctionString);\n\t\tif (paramTypes) {\n\t\t\tif (Array.isArray(paramTypes)) {\n\t\t\t\tif (paramTypes.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramTypes.length + ',' + this.paramNames.length + ')';\n\t\t\t\t}\n\t\t\t\tthis.paramTypes = paramTypes;\n\t\t\t} else if ((typeof paramTypes === 'undefined' ? 'undefined' : _typeof(paramTypes)) === 'object') {\n\t\t\t\tvar paramVariableNames = Object.keys(paramTypes);\n\t\t\t\tif (paramTypes.hasOwnProperty('returns')) {\n\t\t\t\t\tthis.returnType = paramTypes.returns;\n\t\t\t\t\tparamVariableNames.splice(paramVariableNames.indexOf('returns'), 1);\n\t\t\t\t}\n\t\t\t\tif (paramVariableNames.length > 0 && paramVariableNames.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramVariableNames.length + ',' + this.paramNames.length + ')';\n\t\t\t\t} else {\n\t\t\t\t\tthis.paramTypes = this.paramNames.map(function (key) {\n\t\t\t\t\t\tif (paramTypes.hasOwnProperty(key)) {\n\t\t\t\t\t\t\treturn paramTypes[key];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'float';\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.paramTypes = [];\n\t\t\t//TODO: Remove when we have proper type detection\n\t\t\t// for (let a = 0; a < this.paramNames.length; ++a) {\n\t\t\t// \tthis.paramTypes.push();\n\t\t\t// }\n\t\t}\n\n\t\t//\n\t\t// Return type handling\n\t\t//\n\t\tif (!this.returnType) {\n\t\t\tthis.returnType = returnType || 'float';\n\t\t}\n\t}\n\n\t_createClass(BaseFunctionNode, [{\n\t\tkey: 'isIdentifierConstant',\n\t\tvalue: function isIdentifierConstant(paramName) {\n\t\t\tif (!this.constants) return false;\n\t\t\treturn this.constants.hasOwnProperty(paramName);\n\t\t}\n\t}, {\n\t\tkey: 'setAddFunction',\n\t\tvalue: function setAddFunction(fn) {\n\t\t\tthis.addFunction = fn;\n\t\t\treturn this;\n\t\t}\n\t\t/**\n   * \n   * Core Functions\n   * \n   */\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJSFunction\n   *\n   * @desc Gets and return the stored JS Function.\n   * Note: that this internally eval the function, if only the string was provided on construction\n   *\n   * @returns {Function} The function object\n   *\n   */\n\n\t}, {\n\t\tkey: 'getJsFunction',\n\t\tvalue: function getJsFunction() {\n\t\t\tif (this.jsFunction) {\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tif (this.jsFunctionString) {\n\t\t\t\tthis.jsFunction = eval(this.jsFunctionString);\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tthrow 'Missing jsFunction, and jsFunctionString parameter';\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name astMemberExpressionUnroll\n   * @desc Parses the abstract syntax tree for binary expression.\n   *\n   * <p>Utility function for astCallExpression.</p>\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Function} funcParam - FunctionNode, that tracks compilation state\n   *\n   * @returns {String} the function namespace call, unrolled\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpressionUnroll',\n\t\tvalue: function astMemberExpressionUnroll(ast, funcParam) {\n\t\t\tif (ast.type === 'Identifier') {\n\t\t\t\treturn ast.name;\n\t\t\t} else if (ast.type === 'ThisExpression') {\n\t\t\t\treturn 'this';\n\t\t\t}\n\n\t\t\tif (ast.type === 'MemberExpression') {\n\t\t\t\tif (ast.object && ast.property) {\n\t\t\t\t\t//babel sniffing\n\t\t\t\t\tif (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n\t\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.property, funcParam);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.object, funcParam) + '.' + this.astMemberExpressionUnroll(ast.property, funcParam);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//babel sniffing\n\t\t\tif (ast.hasOwnProperty('expressions')) {\n\t\t\t\tvar firstExpression = ast.expressions[0];\n\t\t\t\tif (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.expressions[1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression_unroll', ast, funcParam);\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJsAST\n   *\n   * @desc Parses the class function JS, and returns its Abstract Syntax Tree object.\n   *\n   * This is used internally to convert to shader code\n   *\n   * @param {JISONParser} inParser - Parser to use, assumes in scope 'parser' if null\n   *\n   * @returns {ASTObject} The function AST Object, note that result is cached under this.jsFunctionAST;\n   *\n   */\n\n\t}, {\n\t\tkey: 'getJsAST',\n\t\tvalue: function getJsAST(inParser) {\n\t\t\tif (this.jsFunctionAST) {\n\t\t\t\treturn this.jsFunctionAST;\n\t\t\t}\n\n\t\t\tinParser = inParser || acorn;\n\t\t\tif (inParser === null) {\n\t\t\t\tthrow 'Missing JS to AST parser';\n\t\t\t}\n\n\t\t\tvar ast = inParser.parse('var ' + this.functionName + ' = ' + this.jsFunctionString + ';', {\n\t\t\t\tlocations: true\n\t\t\t});\n\t\t\tif (ast === null) {\n\t\t\t\tthrow 'Failed to parse JS code';\n\t\t\t}\n\n\t\t\t// take out the function object, outside the var declarations\n\t\t\tvar funcAST = ast.body[0].declarations[0].init;\n\t\t\tthis.jsFunctionAST = funcAST;\n\n\t\t\treturn funcAST;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getFunctionString\n   *\n   * @desc Returns the converted webgl shader function equivalent of the JS function\n   *\n   * @returns {String} webgl function string, result is cached under this.webGlFunctionString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionString',\n\t\tvalue: function getFunctionString() {\n\t\t\tthis.generate();\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name setFunctionString\n   *\n   * @desc Set the functionString value, overwriting it\n   *\n   * @param {String} functionString - Shader code string, representing the function\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFunctionString',\n\t\tvalue: function setFunctionString(functionString) {\n\t\t\tthis.functionString = functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getParamType\n   *\n   * @desc Return the type of parameter sent to subKernel/Kernel.\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Type of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getParamType',\n\t\tvalue: function getParamType(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) {\n\t\t\t\treturn this.declarations[paramName];\n\t\t\t} else {\n\t\t\t\tif (!this.parent) {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\t\t\tif (calledFunctionArgument[paramIndex] !== null) {\n\t\t\t\t\t\t\treturn this.paramTypes[paramIndex] = calledFunctionArgument[paramIndex].type;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getUserParamName\n   *\n   * @desc Return the name of the *user parameter*(subKernel parameter) corresponding \n   * to the parameter supplied to the kernel\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Name of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getUserParamName',\n\t\tvalue: function getUserParamName(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) return null;\n\t\t\tif (!this.parent) return null;\n\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\tif (calledFunctionArgument[paramIndex] !== null) {\n\t\t\t\t\treturn calledFunctionArgument[paramIndex].name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}, {\n\t\tkey: 'generate',\n\t\tvalue: function generate(options) {\n\t\t\tthrow new Error('generate not defined on BaseFunctionNode');\n\t\t}\n\n\t\t/**\n   * @function\n   * @name astErrorOutput\n   * @ignore\n   * @desc To throw the AST error, with its location.\n   *\n   * @todo add location support fpr the AST error\n   *\n   * @param {Object} error - the error message output\n   * @param {Object} ast - the AST object where the error is\n   * @param {Object} funcParam - FunctionNode, that tracks compilation state\n   */\n\n\t}, {\n\t\tkey: 'astErrorOutput',\n\t\tvalue: function astErrorOutput(error, ast, funcParam) {\n\t\t\tconsole.error(utils.getAstString(this.jsFunctionString, ast));\n\t\t\tconsole.error(error, ast, funcParam);\n\t\t\treturn error;\n\t\t}\n\t}, {\n\t\tkey: 'astDebuggerStatement',\n\t\tvalue: function astDebuggerStatement(arrNode, retArr, funcParam) {\n\t\t\treturn retArr;\n\t\t}\n\t}]);\n\n\treturn BaseFunctionNode;\n}();"},"lineCount":414}},"hash":"d40ab45ab9cec7d2fa9c2ad6fb4c832e","cacheData":{"env":{}},"id":346}