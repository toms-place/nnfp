{"dependencies":[{"name":"/Users/websi96/WU/nnfp/node_modules/gpu.js/package.json","includedInParent":true,"mtime":1528767275975},{"name":"/Users/websi96/WU/nnfp/package.json","includedInParent":true,"mtime":1529790947609},{"name":"/Users/websi96/WU/nnfp/node_modules/gpu.js/.babelrc","includedInParent":true,"mtime":1528157906000},{"name":"./utils-core","loc":{"line":7,"column":24},"parent":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/gpu-core.js","resolved":"/Users/websi96/WU/nnfp/node_modules/gpu.js/dist/core/utils-core.js"}],"generated":{"js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UtilsCore = require(\"./utils-core\");\n\n/**\n * This is a minimalistic version of GPU.js used \n * to run precompiled GPU.JS code.\n *\n * This intentionally excludes the JS AST compiller : which is 400kb alone/\n *\n * @class GPUCore\n */\nmodule.exports = function () {\n\tfunction GPUCore() {\n\t\t_classCallCheck(this, GPUCore);\n\t}\n\n\t_createClass(GPUCore, null, [{\n\t\tkey: \"validateKernelObj\",\n\n\n\t\t/**\n   * @name validateKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Validates the KernelObj to comply with the defined format\n   * Note that this does only a limited sanity check, and does not  \n   * guarantee a full working validation.\n   *\n   * For the kernel object format see : <kernelObj-format>\n   *\n   * @param {Object|String} kernelObj - KernelObj used to validate\n   *\n   * @returns {Object} The validated kernel object, converted from JSON if needed\n   *\n   */\n\t\tvalue: function validateKernelObj(kernelObj) {\n\n\t\t\t// NULL validation\n\t\t\tif (kernelObj === null) {\n\t\t\t\tthrow \"KernelObj being validated is NULL\";\n\t\t\t}\n\n\t\t\t// String JSON conversion\n\t\t\tif (typeof kernelObj === \"string\") {\n\t\t\t\ttry {\n\t\t\t\t\tkernelObj = JSON.parse(kernelObj);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tthrow \"Failed to convert KernelObj from JSON string\";\n\t\t\t\t}\n\n\t\t\t\t// NULL validation\n\t\t\t\tif (kernelObj === null) {\n\t\t\t\t\tthrow \"Invalid (NULL) KernelObj JSON string representation\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check for kernel obj flag\n\t\t\tif (kernelObj.isKernelObj !== true) {\n\t\t\t\tthrow \"Failed missing isKernelObj flag check\";\n\t\t\t}\n\n\t\t\t// Return the validated kernelObj\n\t\t\treturn kernelObj;\n\t\t}\n\n\t\t/**\n   * @name loadKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Loads the precompiled kernel object. For GPUCore this is the ONLY way to create the kernel.\n   * To generate the kernelObj use <Kernel.exportKernelObj>\n   *\n   * Note that this function calls <validateKernelObj> internally, and throws an exception if it fails.\n   *\n   * @see GPUCore.validateKernelObj\n   * @see\tKernel.exportKernelObj\n   *\n   * @param {Object} kernelObj - The precompiled kernel object\n   * @param {Object} inOpt - [Optional] the option overrides to use\n   *\n   * @returns {Function} The kernel function\n   * \n   */\n\n\t}, {\n\t\tkey: \"loadKernelObj\",\n\t\tvalue: function loadKernelObj(kernelObj, inOpt) {\n\n\t\t\t// Validates the kernelObj, throws an exception if it fails\n\t\t\tkernelObj = validateKernelObj(kernelObj);\n\t\t}\n\t}]);\n\n\treturn GPUCore;\n}();","map":{"mappings":[{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/gpu.js/dist/core/gpu-core.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}}],"sources":{"node_modules/gpu.js/dist/core/gpu-core.js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UtilsCore = require(\"./utils-core\");\n\n/**\n * This is a minimalistic version of GPU.js used \n * to run precompiled GPU.JS code.\n *\n * This intentionally excludes the JS AST compiller : which is 400kb alone/\n *\n * @class GPUCore\n */\nmodule.exports = function () {\n\tfunction GPUCore() {\n\t\t_classCallCheck(this, GPUCore);\n\t}\n\n\t_createClass(GPUCore, null, [{\n\t\tkey: \"validateKernelObj\",\n\n\n\t\t/**\n   * @name validateKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Validates the KernelObj to comply with the defined format\n   * Note that this does only a limited sanity check, and does not  \n   * guarantee a full working validation.\n   *\n   * For the kernel object format see : <kernelObj-format>\n   *\n   * @param {Object|String} kernelObj - KernelObj used to validate\n   *\n   * @returns {Object} The validated kernel object, converted from JSON if needed\n   *\n   */\n\t\tvalue: function validateKernelObj(kernelObj) {\n\n\t\t\t// NULL validation\n\t\t\tif (kernelObj === null) {\n\t\t\t\tthrow \"KernelObj being validated is NULL\";\n\t\t\t}\n\n\t\t\t// String JSON conversion\n\t\t\tif (typeof kernelObj === \"string\") {\n\t\t\t\ttry {\n\t\t\t\t\tkernelObj = JSON.parse(kernelObj);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tthrow \"Failed to convert KernelObj from JSON string\";\n\t\t\t\t}\n\n\t\t\t\t// NULL validation\n\t\t\t\tif (kernelObj === null) {\n\t\t\t\t\tthrow \"Invalid (NULL) KernelObj JSON string representation\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check for kernel obj flag\n\t\t\tif (kernelObj.isKernelObj !== true) {\n\t\t\t\tthrow \"Failed missing isKernelObj flag check\";\n\t\t\t}\n\n\t\t\t// Return the validated kernelObj\n\t\t\treturn kernelObj;\n\t\t}\n\n\t\t/**\n   * @name loadKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Loads the precompiled kernel object. For GPUCore this is the ONLY way to create the kernel.\n   * To generate the kernelObj use <Kernel.exportKernelObj>\n   *\n   * Note that this function calls <validateKernelObj> internally, and throws an exception if it fails.\n   *\n   * @see GPUCore.validateKernelObj\n   * @see\tKernel.exportKernelObj\n   *\n   * @param {Object} kernelObj - The precompiled kernel object\n   * @param {Object} inOpt - [Optional] the option overrides to use\n   *\n   * @returns {Function} The kernel function\n   * \n   */\n\n\t}, {\n\t\tkey: \"loadKernelObj\",\n\t\tvalue: function loadKernelObj(kernelObj, inOpt) {\n\n\t\t\t// Validates the kernelObj, throws an exception if it fails\n\t\t\tkernelObj = validateKernelObj(kernelObj);\n\t\t}\n\t}]);\n\n\treturn GPUCore;\n}();"},"lineCount":105}},"hash":"60ac3c864cf8eddfb805866c283a273d","cacheData":{"env":{}},"id":349}